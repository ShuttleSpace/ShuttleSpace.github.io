import{_ as i}from"./chunks/nsis_4.DiJNIy3A.js";import{_ as a,c as t,a2 as e,o as n}from"./chunks/framework.CQcFAaaG.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"manual/xpack.md","filePath":"manual/xpack.md"}'),l={name:"manual/xpack.md"};function h(p,s,k,o,d,r){return n(),t("div",null,s[0]||(s[0]=[e(`<h2 id="packaging-interface" tabindex="-1">Packaging interface <a class="header-anchor" href="#packaging-interface" aria-label="Permalink to &quot;Packaging interface&quot;">​</a></h2><p>xpack is provided as a plug-in, and all its APIs need to be introduced through <code>includes(&quot;@builtin/xpack&quot;)</code>.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">includes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@builtin/xpack&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_homepage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://xmake.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-version" tabindex="-1">xpack:set_version <a class="header-anchor" href="#xpack-set-version" aria-label="Permalink to &quot;xpack:set_version&quot;">​</a></h3><h4 id="set-package-version" tabindex="-1">Set package version <a class="header-anchor" href="#set-package-version" aria-label="Permalink to &quot;Set package version&quot;">​</a></h4><p>This interface is used to set the version of the generated installation package:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     --...</span></span></code></pre></div><p>If we do not set it, but bind the installed target program through <code>set_targets</code>, the version configuration in target will also be used.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     --...</span></span></code></pre></div><p>We can also use the global project version if no targets are bound.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     --...</span></span></code></pre></div><h3 id="xpack-set-homepage" tabindex="-1">xpack:set_homepage <a class="header-anchor" href="#xpack-set-homepage" aria-label="Permalink to &quot;xpack:set_homepage&quot;">​</a></h3><h4 id="set-homepage-information" tabindex="-1">Set homepage information <a class="header-anchor" href="#set-homepage-information" aria-label="Permalink to &quot;Set homepage information&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_homepage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://xmake.io&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-title" tabindex="-1">xpack:set_title <a class="header-anchor" href="#xpack-set-title" aria-label="Permalink to &quot;xpack:set_title&quot;">​</a></h3><h4 id="set-title-information" tabindex="-1">Set title information <a class="header-anchor" href="#set-title-information" aria-label="Permalink to &quot;Set title information&quot;">​</a></h4><p>A simple description usually used to configure the installation package, shorter than <code>set_description</code>.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Xmake build utility ($(arch))&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-description" tabindex="-1">xpack:set_description <a class="header-anchor" href="#xpack-set-description" aria-label="Permalink to &quot;xpack:set_description&quot;">​</a></h3><h4 id="set-detailed-description" tabindex="-1">Set detailed description <a class="header-anchor" href="#set-detailed-description" aria-label="Permalink to &quot;Set detailed description&quot;">​</a></h4><p>This interface can set more detailed description information of the installation package. You can use one or two sentences to describe the package in detail.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;A cross-platform build utility based on Lua.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-author" tabindex="-1">xpack:set_author <a class="header-anchor" href="#xpack-set-author" aria-label="Permalink to &quot;xpack:set_author&quot;">​</a></h3><h4 id="set-author-information" tabindex="-1">Set author information <a class="header-anchor" href="#set-author-information" aria-label="Permalink to &quot;Set author information&quot;">​</a></h4><p>We can set the email address, name, etc. to describe the author of this package.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_author</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;waruqi@gmail.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-maintainer" tabindex="-1">xpack:set_maintainer <a class="header-anchor" href="#xpack-set-maintainer" aria-label="Permalink to &quot;xpack:set_maintainer&quot;">​</a></h3><h4 id="set-maintainer-information" tabindex="-1">Set maintainer information <a class="header-anchor" href="#set-maintainer-information" aria-label="Permalink to &quot;Set maintainer information&quot;">​</a></h4><p>We can set the email address, name, etc. to describe the maintainer of this package.</p><p>The maintainer and author may or may not be the same person.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_maintainer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;waruqi@gmail.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-copyright" tabindex="-1">xpack:set_copyright <a class="header-anchor" href="#xpack-set-copyright" aria-label="Permalink to &quot;xpack:set_copyright&quot;">​</a></h3><h4 id="set-the-copyright-information-of-the-package" tabindex="-1">Set the copyright information of the package <a class="header-anchor" href="#set-the-copyright-information-of-the-package" aria-label="Permalink to &quot;Set the copyright information of the package&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Copyright (C) 2015-present, TBOOX Open Source Group&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-license" tabindex="-1">xpack:set_license <a class="header-anchor" href="#xpack-set-license" aria-label="Permalink to &quot;xpack:set_license&quot;">​</a></h3><h4 id="set-the-package-licence" tabindex="-1">Set the package licence <a class="header-anchor" href="#set-the-package-licence" aria-label="Permalink to &quot;Set the package licence&quot;">​</a></h4><p>Currently used by packages like srpm/rpm/deb to set the licence name.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_license</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Apache-2.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-licensefile" tabindex="-1">xpack:set_licensefile <a class="header-anchor" href="#xpack-set-licensefile" aria-label="Permalink to &quot;xpack:set_licensefile&quot;">​</a></h3><h4 id="set-the-license-file-of-the-package" tabindex="-1">Set the license file of the package <a class="header-anchor" href="#set-the-license-file-of-the-package" aria-label="Permalink to &quot;Set the license file of the package&quot;">​</a></h4><p>We can set the file path where LICENSE is located, like the NSIS installation package, it will also additionally display the LICENSE page to the installation user.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_licensefile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../LICENSE.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-company" tabindex="-1">xpack:set_company <a class="header-anchor" href="#xpack-set-company" aria-label="Permalink to &quot;xpack:set_company&quot;">​</a></h3><h4 id="set-the-company-to-which-the-package-belongs" tabindex="-1">Set the company to which the package belongs <a class="header-anchor" href="#set-the-company-to-which-the-package-belongs" aria-label="Permalink to &quot;Set the company to which the package belongs&quot;">​</a></h4><p>We can use this interface to set the company and organization name to which the package belongs.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_company</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tboox.org&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-inputkind" tabindex="-1">xpack:set_inputkind <a class="header-anchor" href="#xpack-set-inputkind" aria-label="Permalink to &quot;xpack:set_inputkind&quot;">​</a></h3><h4 id="set-the-packaged-input-source-type" tabindex="-1">Set the packaged input source type <a class="header-anchor" href="#set-the-packaged-input-source-type" aria-label="Permalink to &quot;Set the packaged input source type&quot;">​</a></h4><p>This is an optional interface that can be used to identify the currently packaged input source type.</p><ul><li>binary: package from binary files as input source, usually using <code>add_installfiles</code></li><li>source: Start packaging from a source file as an input source, usually using <code>add_sourcefiles</code></li></ul><p>This is generally used for custom packaging formats, and for built-in formats, such as: nsis, zip, srczip, etc., In fact, it can be determined whether the currently packaged input source is packaged from the source code or directly from the binary source.</p><p>Therefore, unless necessary (such as customizing the packaging format), we usually do not need to set it.</p><p>In the script domain, we can also use <code>package:from_source()</code> and <code>package:from_binary()</code> to determine the current input source.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;targz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srczip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srctargz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;runself&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/(assets/*.png)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {prefixdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;images&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_sourcefiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;(src/**)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">from_source</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test-$(plat)-src-v$(version)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         else</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test-$(plat)-$(arch)-v$(version)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If the above packaging configuration is an nsis package, the binary file will be used as the input source for packaging by default, and the files configured by <code>add_installfiles</code> will be packaged.</p><p><code>srczip</code>, <code>srctargz</code> and <code>runself</code> start packaging from the source file, will package the files in <code>add_sourcefiles</code>, and then execute the packaging script.</p><h3 id="xpack-set-formats" tabindex="-1">xpack:set_formats <a class="header-anchor" href="#xpack-set-formats" aria-label="Permalink to &quot;xpack:set_formats&quot;">​</a></h3><h4 id="set-packaging-format" tabindex="-1">Set packaging format <a class="header-anchor" href="#set-packaging-format" aria-label="Permalink to &quot;Set packaging format&quot;">​</a></h4><p>Configure the packaging format that needs to be generated by the current XPack package. Multiple formats can be configured at the same time. The <code>xmake pack</code> command will generate them all at once.</p><p>!&gt; Some formats will be automatically ignored if the current platform does not support generation.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;targz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srczip&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srctargz&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;runself&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>We can also specify to generate some of the formats through commands instead of generating them all at once.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pack</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;nsis,zip&quot;</span></span></code></pre></div><p>Separated by commas, specify to generate NSIS and zip packages, and ignore other format packages for the time being.</p><p>Currently supported formats are:</p><table tabindex="0"><thead><tr><th>Format</th><th>Description</th></tr></thead><tbody><tr><td>nsis</td><td>Windows NSIS installation package, binary installation</td></tr><tr><td>zip</td><td>Binary zip package, does not contain installation script</td></tr><tr><td>targz</td><td>Binary tar.gz package, does not contain the installation script</td></tr><tr><td>srczip</td><td>zip source package</td></tr><tr><td>srctargz</td><td>tar.gz source package</td></tr><tr><td>runself</td><td>self-running shell script package, source code compilation and installation</td></tr><tr><td>rpm</td><td>rpm binary installation package</td></tr><tr><td>srpm</td><td>rpm source code installation package</td></tr><tr><td>deb</td><td>deb binary installation package (TODO)</td></tr><tr><td>Others</td><td>Customizable formats and installation scripts</td></tr></tbody></table><h3 id="xpack-set-basename" tabindex="-1">xpack:set_basename <a class="header-anchor" href="#xpack-set-basename" aria-label="Permalink to &quot;xpack:set_basename&quot;">​</a></h3><h4 id="set-package-file-name" tabindex="-1">Set package file name <a class="header-anchor" href="#set-package-file-name" aria-label="Permalink to &quot;Set package file name&quot;">​</a></h4><p>Set the file name of the generated package, but do not include the suffix.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_basename</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake-v$(version)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>We can also configure variables such as <code>$(version)</code>, <code>$(plat)</code>, <code>$(arch)</code> and so on.</p><p>In addition, if you want more flexible configuration, you can configure it in the on_load script.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake-v&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-set-extension" tabindex="-1">xpack:set_extension <a class="header-anchor" href="#xpack-set-extension" aria-label="Permalink to &quot;xpack:set_extension&quot;">​</a></h3><h4 id="set-the-extension-of-the-installation-package" tabindex="-1">Set the extension of the installation package <a class="header-anchor" href="#set-the-extension-of-the-installation-package" aria-label="Permalink to &quot;Set the extension of the installation package&quot;">​</a></h4><p>Usually we do not need to modify the extension of the generated package, because after specifying <code>nsis</code>, <code>zip</code> and other formats, there will be a default suffix name, such as: <code>.exe</code>, <code>.zip</code>.</p><p>However, if we are customizing the package format and need to generate a custom package, then we may need to configure it.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mypack&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myformat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_extension</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;.myf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> outputfile </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">outputfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>For example, here we customize a myformat package format, using the custom suffix name of <code>.myf</code>, and then we can generate it in on_package,</p><p>The package output file name returned by <code>package:outputfile()</code> will contain this suffix.</p><h3 id="xpack-add-targets" tabindex="-1">xpack:add_targets <a class="header-anchor" href="#xpack-add-targets" aria-label="Permalink to &quot;xpack:add_targets&quot;">​</a></h3><h4 id="associated-target-program" tabindex="-1">Associated target program <a class="header-anchor" href="#associated-target-program" aria-label="Permalink to &quot;Associated target program&quot;">​</a></h4><p>We can use this interface to configure the associated target that needs to be installed.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;shared&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_headerfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;include/(*.h)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_targets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;foo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>When the test installation package is generated, the executable program and dynamic library of the associated foo target will be packaged and installed together. In addition, the custom installation files configured through <code>add_headerfiles</code> and <code>add_installfiles</code> in the target will also be included in the installation package and installed together.</p><p>And we can also use <code>on_installcmd</code>, <code>after_installcmd</code> and other custom packaging installation scripts in the target and its rules, which will also be executed together.</p><h3 id="xpack-add-components" tabindex="-1">xpack:add_components <a class="header-anchor" href="#xpack-add-components" aria-label="Permalink to &quot;xpack:add_components&quot;">​</a></h3><h4 id="add-installation-package-components" tabindex="-1">Add installation package components <a class="header-anchor" href="#add-installation-package-components" aria-label="Permalink to &quot;Add installation package components&quot;">​</a></h4><p>We also support adding custom components to the installation package and selecting and installing them according to the component mode. Currently, only NSIS packages have comparative support effects.</p><p>We can define a component domain through <code>xpack_component()</code>, and then use <code>add_components()</code> to add the specified component and associate it with the package.</p><p>In the component, we can write some custom installation scripts through <code>on_installcmd()</code>, and the installation will only be executed when the component is enabled.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LongPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LongPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Enable Long Path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Increases the maximum path length limit, up to 32,767 characters (before 256).&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_installcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rawcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">[[</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   \${If} $NoAdmin == &quot;false&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     ; Enable long path</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     WriteRegDWORD \${HKLM} &quot;SYSTEM\\CurrentControlSet\\Control\\FileSystem&quot; &quot;LongPathsEnabled&quot; 1</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   \${EndIf}]]</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Here, we use <code>batchcmds:rawcmd(&quot;nsis&quot;, &quot;...&quot;)</code> to add an nsis-specific installation command to enable long path support. The effect is as follows:</p><p><img src="`+i+`" alt=""></p><p>It will only be enabled when we check LongPath. Of course, we can also configure whether the component is enabled by default through <code>set_default()</code>.</p><p>Except for the NSIS package, although other packages do not have complete support for components, they will also execute the scripts in the components to implement packaging, but may not be able to display the corresponding component UI and check boxes.</p><h3 id="xpack-set-bindir" tabindex="-1">xpack:set_bindir <a class="header-anchor" href="#xpack-set-bindir" aria-label="Permalink to &quot;xpack:set_bindir&quot;">​</a></h3><h4 id="set-the-binary-installation-directory-of-the-package" tabindex="-1">Set the binary installation directory of the package <a class="header-anchor" href="#set-the-binary-installation-directory-of-the-package" aria-label="Permalink to &quot;Set the binary installation directory of the package&quot;">​</a></h4><p>Usually the generated installation package will have an installation root directory, and we can specify the bin directory location under the installation directory through this configuration.</p><p>If not specified, defaults to <code>installdir/bin</code>.</p><p>If configured</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_bindir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mybin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Then the executable file will be installed under <code>installdir/mybin</code>. If it is an NSIS package, this path will be automatically set to <code>%PATH%</code> after installation.</p><h3 id="xpack-set-libdir" tabindex="-1">xpack:set_libdir <a class="header-anchor" href="#xpack-set-libdir" aria-label="Permalink to &quot;xpack:set_libdir&quot;">​</a></h3><h4 id="set-the-library-installation-directory-of-the-package" tabindex="-1">Set the library installation directory of the package <a class="header-anchor" href="#set-the-library-installation-directory-of-the-package" aria-label="Permalink to &quot;Set the library installation directory of the package&quot;">​</a></h4><p>Usually the generated installation package will have an installation root directory, and we can specify the lib directory location under the installation directory through this configuration.</p><p>If not specified, defaults to <code>installdir/lib</code>.</p><p>If configured</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_libdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mylib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Then the static library files will be installed under <code>installdir/mylib</code>.</p><h3 id="xpack-set-includedir" tabindex="-1">xpack:set_includedir <a class="header-anchor" href="#xpack-set-includedir" aria-label="Permalink to &quot;xpack:set_includedir&quot;">​</a></h3><h4 id="set-the-package-header-file-installation-directory" tabindex="-1">Set the package header file installation directory <a class="header-anchor" href="#set-the-package-header-file-installation-directory" aria-label="Permalink to &quot;Set the package header file installation directory&quot;">​</a></h4><p>Usually the generated installation package will have an installation root directory, and we can specify the include directory location under the installation directory through this configuration.</p><p>If not specified, defaults to <code>installdir/include</code>.</p><p>If configured</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_includedir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;myinc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Then the header files will be installed under <code>installdir/myinc</code>.</p><h3 id="xpack-set-prefixdir" tabindex="-1">xpack:set_prefixdir <a class="header-anchor" href="#xpack-set-prefixdir" aria-label="Permalink to &quot;xpack:set_prefixdir&quot;">​</a></h3><h4 id="set-the-installation-prefix-directory-of-the-package" tabindex="-1">Set the installation prefix directory of the package <a class="header-anchor" href="#set-the-installation-prefix-directory-of-the-package" aria-label="Permalink to &quot;Set the installation prefix directory of the package&quot;">​</a></h4><p>If configured</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_prefixdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;prefix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Then all installation files will be installed under <code>installdir/prefix</code>, for example:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>installdir</span></span>
<span class="line"><span>   - prefix</span></span>
<span class="line"><span>     - include</span></span>
<span class="line"><span>     - lib</span></span>
<span class="line"><span>     - bin</span></span></code></pre></div><h3 id="xpack-set-specfile" tabindex="-1">xpack:set_specfile <a class="header-anchor" href="#xpack-set-specfile" aria-label="Permalink to &quot;xpack:set_specfile&quot;">​</a></h3><h4 id="set-package-spec-file-path" tabindex="-1">Set package spec file path <a class="header-anchor" href="#set-package-spec-file-path" aria-label="Permalink to &quot;Set package spec file path&quot;">​</a></h4><p>The generation of some package formats requires the generation of specific spec files before calling third-party packaging tools to generate packages.</p><p>For example, for NSIS packages, you need to first generate an NSIS-specific <code>.nsi</code> configuration file through xmake based on the xpack configuration, and then xmake will call <code>makensis.exe</code> to generate the NSIS package based on this <code>.nsi</code> file.</p><p>Packages such as deb/rpm have specific spec files.</p><p>xmake will automatically generate a spec file by default when packaging, but if we want to more deeply customize the configuration of some unique packages, we can use this interface,</p><p>Configure a spec file of your own, in which the user maintains some package configuration definitions, and then define some <code>\${PACKAGE_NAME}</code>, <code>\${VERSION}</code> package-specific built-in variables in it to realize package information replacement.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_specfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;makensis.nsi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>makensis.nsi</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VIProductVersion &quot;\${VERSION}.0&quot;</span></span>
<span class="line"><span>VIFileVersion &quot;\${VERSION}.0&quot;</span></span>
<span class="line"><span>VIAddVersionKey /LANG=0 ProductName &quot;\${PACKAGE_NAME}&quot;</span></span>
<span class="line"><span>VIAddVersionKey /LANG=0 Comments &quot;\${PACKAGE_DESCRIPTION}&quot;</span></span>
<span class="line"><span>VIAddVersionKey /LANG=0 CompanyName &quot;\${PACKAGE_COMPANY}&quot;</span></span>
<span class="line"><span>VIAddVersionKey /LANG=0 LegalCopyright &quot;\${PACKAGE_COPYRIGHT}&quot;</span></span>
<span class="line"><span>VIAddVersionKey /LANG=0 FileDescription &quot;\${PACKAGE_NAME} Installer - v\${VERSION}&quot;</span></span>
<span class="line"><span>VIAddVersionKey /LANG=0 OriginalFilename &quot;\${PACKAGE_FILENAME}&quot;</span></span></code></pre></div><p>Here are some built-in commonly used package variables:</p><table tabindex="0"><thead><tr><th>Variable name</th><th>Description</th></tr></thead><tbody><tr><td>PACKAGE_ARCH</td><td>Architecture of package binaries</td></tr><tr><td>PACKAGE_PLAT</td><td>Platform for package binaries</td></tr><tr><td>PACKAGE_NAME</td><td>Package name</td></tr><tr><td>PACKAGE_TITLE</td><td>Brief description of the package</td></tr><tr><td>PACKAGE_DESCRIPTION</td><td>Detailed description of the package</td></tr><tr><td>PACKAGE_FILENAME</td><td>Package file name</td></tr><tr><td>PACKAGE_AUTHOR</td><td>package author</td></tr><tr><td>PACKAGE_MAINTAINER</td><td>Package maintainer</td></tr><tr><td>PACKAGE_HOMEPAGE</td><td>Package homepage address</td></tr><tr><td>PACKAGE_COPYRIGHT</td><td>Package copyright information</td></tr><tr><td>PACKAGE_COMPANY</td><td>The name of the company to which the package belongs</td></tr><tr><td>PACKAGE_ICONFILE</td><td>Package icon file path</td></tr><tr><td>PACKAGE_LICENSEFILE</td><td>Package LICENSE file path</td></tr><tr><td>PACKAGE_VERSION_MAJOR</td><td>The major version of the package</td></tr><tr><td>PACKAGE_VERSION_MINOR</td><td>The minor version of the package</td></tr><tr><td>PACKAGE_VERSION_ALTER</td><td>Alter version of package</td></tr><tr><td>PACKAGE_VERSION_BUILD</td><td>The build version of the package</td></tr></tbody></table><p>In addition to built-in variables, we can also configure some custom template variables through the <code>set_specvar</code> interface.</p><h3 id="xpack-set-specvar" tabindex="-1">xpack:set_specvar <a class="header-anchor" href="#xpack-set-specvar" aria-label="Permalink to &quot;xpack:set_specvar&quot;">​</a></h3><h4 id="set-custom-variables-in-the-package-spec-file" tabindex="-1">Set custom variables in the package spec file <a class="header-anchor" href="#set-custom-variables-in-the-package-spec-file" aria-label="Permalink to &quot;Set custom variables in the package spec file&quot;">​</a></h4><p>Usually used together with the <code>set_specfile</code> interface to set some custom package variables in a custom spec template file.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;nsis&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_specfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;makensis.nsi&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_specvar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;FOO&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>makensis.nsi</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>VIAddVersionKey /LANG=0 ProductName &quot;\${FOO}&quot;</span></span></code></pre></div><p>Before generating the package, xmake will replace <code>\${FOO}</code> with hello, and then call the <code>makensis.exe</code> command to generate the NSIS installation package based on this file.</p><h3 id="xpack-set-iconfile" tabindex="-1">xpack:set_iconfile <a class="header-anchor" href="#xpack-set-iconfile" aria-label="Permalink to &quot;xpack:set_iconfile&quot;">​</a></h3><h4 id="set-icon-file-path" tabindex="-1">Set icon file path <a class="header-anchor" href="#set-icon-file-path" aria-label="Permalink to &quot;Set icon file path&quot;">​</a></h4><p>We can additionally configure an ico icon file, which can be used to set the icon of some installation packages such as NSIS that support icon customization.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_iconfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xmake.ico&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-add-sourcefiles" tabindex="-1">xpack:add_sourcefiles <a class="header-anchor" href="#xpack-add-sourcefiles" aria-label="Permalink to &quot;xpack:add_sourcefiles&quot;">​</a></h3><h4 id="add-source-files" tabindex="-1">Add source files <a class="header-anchor" href="#add-source-files" aria-label="Permalink to &quot;Add source files&quot;">​</a></h4><p>This is usually used for source packages, that is, pure source packages such as <code>srczip</code>, <code>srctargz</code>, and source code installation packages in the <code>runself</code> format.</p><p>If it is a custom package format, we need to configure <code>set_inputkind(&quot;source&quot;)</code> to open the source package.</p><p>Through this interface, you can customize which source files need to be included in the package for later compilation and installation.</p><p>Its detailed usage is similar to <code>add_installfiles</code>, you can refer to its documentation description.</p><h3 id="xpack-add-installfiles" tabindex="-1">xpack:add_installfiles <a class="header-anchor" href="#xpack-add-installfiles" aria-label="Permalink to &quot;xpack:add_installfiles&quot;">​</a></h3><h4 id="add-binary-files" tabindex="-1">Add binary files <a class="header-anchor" href="#add-binary-files" aria-label="Permalink to &quot;Add binary files&quot;">​</a></h4><p>This is usually used for binary packages, that is, packages in <code>nsis</code>, <code>deb</code>, etc. formats, which install binary files directly.</p><p>Therefore, we can use this interface to configure additional binary files that need to be installed, such as executable files, resource files, etc.</p><p>For example, we can specify to install various types of files to the installation directory:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.h&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;doc/*.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>We can also specify to install to a specific subdirectory:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.h&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {prefixdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;doc/*.md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {prefixdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;share/doc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><p>For the above settings, we will install them to <code>installdir/include/*.h</code>, <code>installdir/share/doc/*.md</code>.</p><p>Note: The default installation will not retain the directory structure and will be fully expanded. Of course, we can also use <code>()</code> to extract the subdirectory structure in the source file for installation, for example:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/(tbox/*.h)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {prefixdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;include&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_installfiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;doc/(tbox/*.md)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {prefixdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;share/doc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="xpack-add-buildrequires" tabindex="-1">xpack:add_buildrequires <a class="header-anchor" href="#xpack-add-buildrequires" aria-label="Permalink to &quot;xpack:add_buildrequires&quot;">​</a></h3><h4 id="add-package-build-dependencies" tabindex="-1">Add package build dependencies <a class="header-anchor" href="#add-package-build-dependencies" aria-label="Permalink to &quot;Add package build dependencies&quot;">​</a></h4><p>This is usually used for some source packages, such as srpm. Before installing these source code packages, you need to build the source code first, and building the source code may require the use of some other dependency packages.</p><p>We can configure them through this interface.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> format </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;srpm&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;buildrequires&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;make&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;buildrequires&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;buildrequires&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;gcc-c++&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_buildcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">runv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;make&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Since different installation packages have some differences in their dependent package names, we need to configure them for different package formats in the on_load script domain.</p><h3 id="xpack-on-load" tabindex="-1">xpack:on_load <a class="header-anchor" href="#xpack-on-load" aria-label="Permalink to &quot;xpack:on_load&quot;">​</a></h3><h4 id="custom-loading-script" tabindex="-1">Custom loading script <a class="header-anchor" href="#custom-loading-script" aria-label="Permalink to &quot;Custom loading script&quot;">​</a></h4><p>If the configuration in the description field cannot meet our needs, we can further flexibly configure the package in the on_load custom script field.</p><p>This interface will be called during the initial loading of each XPack package, and you can make some basic configurations in it.</p><p>For example, dynamically modify the package file name in it:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;basename&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test-&quot; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">..</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-before-package" tabindex="-1">xpack:before_package <a class="header-anchor" href="#xpack-before-package" aria-label="Permalink to &quot;xpack:before_package&quot;">​</a></h3><h4 id="customize-the-script-before-packaging" tabindex="-1">Customize the script before packaging <a class="header-anchor" href="#customize-the-script-before-packaging" aria-label="Permalink to &quot;Customize the script before packaging&quot;">​</a></h4><p>We can configure custom scripts before packaging through this interface.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     before_package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-on-package" tabindex="-1">xpack:on_package <a class="header-anchor" href="#xpack-on-package" aria-label="Permalink to &quot;xpack:on_package&quot;">​</a></h3><h4 id="custom-packaging-script" tabindex="-1">Custom packaging script <a class="header-anchor" href="#custom-packaging-script" aria-label="Permalink to &quot;Custom packaging script&quot;">​</a></h4><p>We can configure packaging custom scripts through this interface, which will rewrite the entire built-in packaging logic. Typically used for custom package formats.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xxx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-after-package" tabindex="-1">xpack:after_package <a class="header-anchor" href="#xpack-after-package" aria-label="Permalink to &quot;xpack:after_package&quot;">​</a></h3><h4 id="customize-the-script-after-packaging" tabindex="-1">Customize the script after packaging <a class="header-anchor" href="#customize-the-script-after-packaging" aria-label="Permalink to &quot;Customize the script after packaging&quot;">​</a></h4><p>We can configure the custom script after packaging through this interface.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     after_package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-on-buildcmd" tabindex="-1">xpack:on_buildcmd <a class="header-anchor" href="#xpack-on-buildcmd" aria-label="Permalink to &quot;xpack:on_buildcmd&quot;">​</a></h3><h4 id="custom-build-script" tabindex="-1">Custom build script <a class="header-anchor" href="#custom-build-script" aria-label="Permalink to &quot;Custom build script&quot;">​</a></h4><p>For some source code build packages, we need to build the source code first before installation, such as srpm packages.</p><p>Therefore, we can customize the build script through this interface, for example:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_sourcefiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_sourcefiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./configure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_buildcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">runv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./configure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">runv</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;make&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>If we associate target programs through add_targets, xpack will execute the <code>xmake build</code> command by default to build them even if we do not configure <code>on_buildcmd</code>.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_sourcefiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     add_sourcefiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;./xmake.lua&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>In addition, we can also use <code>add_buildrequires</code> to configure some build dependencies.</p><h3 id="xpack-before-buildcmd" tabindex="-1">xpack:before_buildcmd <a class="header-anchor" href="#xpack-before-buildcmd" aria-label="Permalink to &quot;xpack:before_buildcmd&quot;">​</a></h3><h4 id="customize-pre-build-scripts" tabindex="-1">Customize pre-build scripts <a class="header-anchor" href="#customize-pre-build-scripts" aria-label="Permalink to &quot;Customize pre-build scripts&quot;">​</a></h4><p>Through this interface, we can configure pre-build scripts.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     before_buildcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-after-buildcmd" tabindex="-1">xpack:after_buildcmd <a class="header-anchor" href="#xpack-after-buildcmd" aria-label="Permalink to &quot;xpack:after_buildcmd&quot;">​</a></h3><h4 id="customize-the-script-after-the-build" tabindex="-1">Customize the script after the build <a class="header-anchor" href="#customize-the-script-after-the-build" aria-label="Permalink to &quot;Customize the script after the build&quot;">​</a></h4><p>Through this interface, we can configure the script after the build.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_formats</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;srpm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     after_buildcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-before-installcmd" tabindex="-1">xpack:before_installcmd <a class="header-anchor" href="#xpack-before-installcmd" aria-label="Permalink to &quot;xpack:before_installcmd&quot;">​</a></h3><h4 id="add-script-before-installation" tabindex="-1">Add script before installation <a class="header-anchor" href="#add-script-before-installation" aria-label="Permalink to &quot;Add script before installation&quot;">​</a></h4><p>It will not rewrite the entire installation script, but will add some custom installation scripts before the existing installation scripts are executed:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     before_installcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/assets/*.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), {rootdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>It should be noted that the cp, mkdir and other commands added through <code>batchcmds</code> will not be executed immediately, but will only generate a command list. When the package is actually generated later, these commands will be translated into packaging commands.</p><h3 id="xpack-on-installcmd" tabindex="-1">xpack:on_installcmd <a class="header-anchor" href="#xpack-on-installcmd" aria-label="Permalink to &quot;xpack:on_installcmd&quot;">​</a></h3><h4 id="custom-installation-script" tabindex="-1">Custom installation script <a class="header-anchor" href="#custom-installation-script" aria-label="Permalink to &quot;Custom installation script&quot;">​</a></h4><p>This time, the built-in default installation script is completely rewritten, including the internal automatic installation of files configured with <code>add_installfiles</code>. Users need to handle all the installation logic by themselves.</p><h3 id="xpack-after-installcmd" tabindex="-1">xpack:after_installcmd <a class="header-anchor" href="#xpack-after-installcmd" aria-label="Permalink to &quot;xpack:after_installcmd&quot;">​</a></h3><h4 id="add-post-installation-scripts" tabindex="-1">Add post-installation scripts <a class="header-anchor" href="#add-post-installation-scripts" aria-label="Permalink to &quot;Add post-installation scripts&quot;">​</a></h4><p>It will not rewrite the entire installation script, but will add some custom installation scripts after the existing installation scripts are executed:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     after_installcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (package, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/assets/*.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), {rootdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>It should be noted that the cp, mkdir and other commands added through <code>batchcmds</code> will not be executed immediately, but will only generate a command list. When the package is actually generated later, these commands will be translated into packaging commands.</p><h3 id="xpack-before-uninstallcmd" tabindex="-1">xpack:before_uninstallcmd <a class="header-anchor" href="#xpack-before-uninstallcmd" aria-label="Permalink to &quot;xpack:before_uninstallcmd&quot;">​</a></h3><h4 id="add-script-before-uninstallation" tabindex="-1">Add script before uninstallation <a class="header-anchor" href="#add-script-before-uninstallation" aria-label="Permalink to &quot;Add script before uninstallation&quot;">​</a></h4><p>Similar to before_installcmd, please refer to before_installcmd description.</p><h3 id="xpack-on-uninstallcmd" tabindex="-1">xpack:on_uninstallcmd <a class="header-anchor" href="#xpack-on-uninstallcmd" aria-label="Permalink to &quot;xpack:on_uninstallcmd&quot;">​</a></h3><h4 id="custom-uninstall-script" tabindex="-1">Custom uninstall script <a class="header-anchor" href="#custom-uninstall-script" aria-label="Permalink to &quot;Custom uninstall script&quot;">​</a></h4><p>Similar to on_installcmd, please refer to on_installcmd description.</p><h3 id="xpack-after-uninstallcmd" tabindex="-1">xpack:after_uninstallcmd <a class="header-anchor" href="#xpack-after-uninstallcmd" aria-label="Permalink to &quot;xpack:after_uninstallcmd&quot;">​</a></h3><h4 id="add-script-after-uninstallation" tabindex="-1">Add script after uninstallation <a class="header-anchor" href="#add-script-after-uninstallation" aria-label="Permalink to &quot;Add script after uninstallation&quot;">​</a></h4><p>Similar to after_installcmd, please refer to after_installcmd description.</p><h3 id="xpack-set-nsis-displayicon" tabindex="-1">xpack:set_nsis_displayicon <a class="header-anchor" href="#xpack-set-nsis-displayicon" aria-label="Permalink to &quot;xpack:set_nsis_displayicon&quot;">​</a></h3><h4 id="set-the-display-icon-of-nsis" tabindex="-1">Set the display icon of NSIS <a class="header-anchor" href="#set-the-display-icon-of-nsis" aria-label="Permalink to &quot;Set the display icon of NSIS&quot;">​</a></h4><p>This is an NSIS proprietary API that can be used to configure NSIS display icons:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_nsis_displayicon</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;bin/foo.exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>We need to configure the executable file path with an icon so that the icon displayed in the installation package is consistent with it.</p><p>This is an optional configuration. Even if we do not configure it, xmake will use the icon in the executable file in the associated target by default.</p><h2 id="component-interface" tabindex="-1">Component interface <a class="header-anchor" href="#component-interface" aria-label="Permalink to &quot;Component interface&quot;">​</a></h2><h3 id="xpack-component-set-title" tabindex="-1">xpack_component:set_title <a class="header-anchor" href="#xpack-component-set-title" aria-label="Permalink to &quot;xpack_component:set_title&quot;">​</a></h3><h4 id="set-a-brief-description-of-the-package-components" tabindex="-1">Set a brief description of the package components <a class="header-anchor" href="#set-a-brief-description-of-the-package-components" aria-label="Permalink to &quot;Set a brief description of the package components&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LongPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Enable Long Path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-set-description" tabindex="-1">xpack_component:set_description <a class="header-anchor" href="#xpack-component-set-description" aria-label="Permalink to &quot;xpack_component:set_description&quot;">​</a></h3><h4 id="set-detailed-description-of-package-components" tabindex="-1">Set detailed description of package components <a class="header-anchor" href="#set-detailed-description-of-package-components" aria-label="Permalink to &quot;Set detailed description of package components&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LongPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Increases the maximum path length limit, up to 32,767 characters (before 256).&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-set-default" tabindex="-1">xpack_component:set_default <a class="header-anchor" href="#xpack-component-set-default" aria-label="Permalink to &quot;xpack_component:set_default&quot;">​</a></h3><h4 id="set-the-default-enabled-state-of-package-components" tabindex="-1">Set the default enabled state of package components <a class="header-anchor" href="#set-the-default-enabled-state-of-package-components" aria-label="Permalink to &quot;Set the default enabled state of package components&quot;">​</a></h4><p>Usually the package component is enabled by default, but we can also use this interface to disable this component by default. Only when the user chooses to check this component when installing the package will it be enabled for installation.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;LongPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_default</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     set_title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Enable Long Path&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-on-load" tabindex="-1">xpack_component:on_load <a class="header-anchor" href="#xpack-component-on-load" aria-label="Permalink to &quot;xpack_component:on_load&quot;">​</a></h3><h4 id="custom-loading-script-1" tabindex="-1">Custom loading script <a class="header-anchor" href="#custom-loading-script-1" aria-label="Permalink to &quot;Custom loading script&quot;">​</a></h4><p>We can further flexibly configure package components in the on_load custom script field.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_load</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">         local</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> package </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-before-installcmd" tabindex="-1">xpack_component:before_installcmd <a class="header-anchor" href="#xpack-component-before-installcmd" aria-label="Permalink to &quot;xpack_component:before_installcmd&quot;">​</a></h3><h4 id="add-script-before-component-installation" tabindex="-1">Add script before component installation <a class="header-anchor" href="#add-script-before-component-installation" aria-label="Permalink to &quot;Add script before component installation&quot;">​</a></h4><p>It will not rewrite the entire installation script, but will add some custom installation scripts before the existing installation scripts are executed:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     before_installcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/assets/*.txt&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;resources&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), {rootdir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;src&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">         batchcmds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mkdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">package</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">installdir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;stub&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>It should be noted that the cp, mkdir and other commands added through <code>batchcmds</code> will not be executed immediately, but will only generate a command list. When the package is actually generated later, these commands will be translated into packaging commands.</p><p>It is exactly the same as xpack&#39;s before_installcmd. The only difference is that the installation script here will only be executed when this component is enabled.</p><h3 id="xpack-component-on-installcmd" tabindex="-1">xpack_component:on_installcmd <a class="header-anchor" href="#xpack-component-on-installcmd" aria-label="Permalink to &quot;xpack_component:on_installcmd&quot;">​</a></h3><h4 id="rewrite-the-installation-script-of-the-component" tabindex="-1">Rewrite the installation script of the component <a class="header-anchor" href="#rewrite-the-installation-script-of-the-component" aria-label="Permalink to &quot;Rewrite the installation script of the component&quot;">​</a></h4><p>This will rewrite the entire component&#39;s installation script, similar to xpack&#39;s on_installcmd.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_installcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-after-installcmd" tabindex="-1">xpack_component:after_installcmd <a class="header-anchor" href="#xpack-component-after-installcmd" aria-label="Permalink to &quot;xpack_component:after_installcmd&quot;">​</a></h3><h4 id="add-script-after-component-installation" tabindex="-1">Add script after component installation <a class="header-anchor" href="#add-script-after-component-installation" aria-label="Permalink to &quot;Add script after component installation&quot;">​</a></h4><p>After the component is installed, the script here will be executed, similar to xpack&#39;s after_installcmd.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     after_installcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-before-uninstallcmd" tabindex="-1">xpack_component:before_uninstallcmd <a class="header-anchor" href="#xpack-component-before-uninstallcmd" aria-label="Permalink to &quot;xpack_component:before_uninstallcmd&quot;">​</a></h3><h4 id="add-script-before-component-uninstallation" tabindex="-1">Add script before component uninstallation <a class="header-anchor" href="#add-script-before-component-uninstallation" aria-label="Permalink to &quot;Add script before component uninstallation&quot;">​</a></h4><p>After the component is installed, the script here will be executed, similar to xpack&#39;s before_uninstallcmd.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     before_uninstallcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-on-uninstallcmd" tabindex="-1">xpack_component:on_uninstallcmd <a class="header-anchor" href="#xpack-component-on-uninstallcmd" aria-label="Permalink to &quot;xpack_component:on_uninstallcmd&quot;">​</a></h3><h4 id="rewrite-the-script-for-component-uninstallation" tabindex="-1">Rewrite the script for component uninstallation <a class="header-anchor" href="#rewrite-the-script-for-component-uninstallation" aria-label="Permalink to &quot;Rewrite the script for component uninstallation&quot;">​</a></h4><p>This will rewrite the entire component&#39;s uninstall script, similar to xpack&#39;s on_uninstallcmd.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     on_uninstallcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-after-uninstallcmd" tabindex="-1">xpack_component:after_uninstallcmd <a class="header-anchor" href="#xpack-component-after-uninstallcmd" aria-label="Permalink to &quot;xpack_component:after_uninstallcmd&quot;">​</a></h3><h4 id="add-script-after-component-uninstallation" tabindex="-1">Add script after component uninstallation <a class="header-anchor" href="#add-script-after-component-uninstallation" aria-label="Permalink to &quot;Add script after component uninstallation&quot;">​</a></h4><p>After the component is uninstalled, the script here will be executed, similar to xpack&#39;s before_uninstallcmd.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xpack_component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     before_uninstallcmd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (component, batchcmds)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         -- TODO</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="xpack-component-add-sourcefiles" tabindex="-1">xpack_component:add_sourcefiles <a class="header-anchor" href="#xpack-component-add-sourcefiles" aria-label="Permalink to &quot;xpack_component:add_sourcefiles&quot;">​</a></h3><h4 id="add-component-source-file" tabindex="-1">Add component source file <a class="header-anchor" href="#add-component-source-file" aria-label="Permalink to &quot;Add component source file&quot;">​</a></h4><p>This is similar to xpack&#39;s add_sourcefiles, but here only when the component is enabled, these source files will be added to the installation package.</p><h3 id="xpack-component-add-installfiles" tabindex="-1">xpack_component:add_installfiles <a class="header-anchor" href="#xpack-component-add-installfiles" aria-label="Permalink to &quot;xpack_component:add_installfiles&quot;">​</a></h3><h4 id="add-component-binary-installation-file" tabindex="-1">Add component binary installation file <a class="header-anchor" href="#add-component-binary-installation-file" aria-label="Permalink to &quot;Add component binary installation file&quot;">​</a></h4><p>This is similar to xpack&#39;s add_installfiles, but here only the binaries are added to the installation package when the component is enabled.</p>`,279)]))}const u=a(l,[["render",h]]);export{g as __pageData,u as default};
