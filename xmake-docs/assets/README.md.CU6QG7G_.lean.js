import{_ as s,c as a,a2 as e,o as t}from"./chunks/framework.CQcFAaaG.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),l={name:"README.md"};function n(h,i,p,r,k,o){return t(),a("div",null,i[0]||(i[0]=[e(`<h2 id="support-this-project" tabindex="-1">Support this project <a class="header-anchor" href="#support-this-project" aria-label="Permalink to &quot;Support this project&quot;">‚Äã</a></h2><p>Support this project by <a href="https://xmake.io/#/about/sponsor" target="_blank" rel="noreferrer">becoming a sponsor</a>. Your logo will show up here with a link to your website. üôè</p><p><a href="https://opencollective.com/xmake#sponsors" target="_blank"><img src="https://opencollective.com/xmake/sponsors.svg?width=890"></a><a href="https://opencollective.com/xmake#backers" target="_blank"><img src="https://opencollective.com/xmake/backers.svg?width=890"></a></p><h2 id="technical-support" tabindex="-1">Technical support <a class="header-anchor" href="#technical-support" aria-label="Permalink to &quot;Technical support&quot;">‚Äã</a></h2><p>You can also consider sponsoring us to get extra technical support services via the <a href="https://github.com/sponsors/waruqi" target="_blank" rel="noreferrer">Github sponsor program</a>. If you do, you can get access to the <a href="https://github.com/xmake-io/technical-support" target="_blank" rel="noreferrer">xmake-io/technical-support</a> repository, which has the following bennefits:</p><ul><li>[X] Handling Issues with higher priority</li><li>[X] One-to-one technical consulting service</li><li>[X] Review your xmake.lua and provide suggestions for improvement</li></ul><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">‚Äã</a></h2><p>What is Xmake?</p><ol><li>Xmake is a cross-platform build utility based on the Lua scripting language.</li><li>Xmake is very lightweight and has no dependencies outside of the standard library.</li><li>Uses the <code>xmake.lua</code> file to maintain project builds with a simple and readable syntax.</li></ol><p>Xmake can be used to directly build source code (like with Make or Ninja), or it can generate project source files like CMake or Meson. It also has a <em>built-in</em> package management system to help users integrate C/C++ dependencies.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Xmake = Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache</span></span></code></pre></div><p>Although less precise, one can still understand Xmake in the following way:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Xmake ‚âà Make/Ninja + CMake/Meson + Vcpkg/Conan + distcc + ccache/sccache</span></span></code></pre></div><p>If you want to know more, please refer to: the <a href="https://xmake.io/#/getting_started" target="_blank" rel="noreferrer">Documentation</a>, <a href="https://github.com/xmake-io/xmake" target="_blank" rel="noreferrer">GitHub</a> or <a href="https://gitee.com/tboox/xmake" target="_blank" rel="noreferrer">Gitee</a>. You are also welcome to join our <a href="https://xmake.io/#/about/contact" target="_blank" rel="noreferrer">community</a>.</p><p>The official Xmake repository can be found at <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-io/xmake-repo</a>.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">‚Äã</a></h2><h3 id="with-curl" tabindex="-1">With cURL <a class="header-anchor" href="#with-curl" aria-label="Permalink to &quot;With cURL&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://xmake.io/shget.text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h3 id="with-wget" tabindex="-1">With Wget <a class="header-anchor" href="#with-wget" aria-label="Permalink to &quot;With Wget&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://xmake.io/shget.text</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h3 id="with-powershell" tabindex="-1">With PowerShell <a class="header-anchor" href="#with-powershell" aria-label="Permalink to &quot;With PowerShell&quot;">‚Äã</a></h3><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Invoke-Expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Invoke-Webrequest </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://xmake.io/psget.text&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -UseBasicParsing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).Content</span></span></code></pre></div><h3 id="other-installation-methods" tabindex="-1">Other installation methods <a class="header-anchor" href="#other-installation-methods" aria-label="Permalink to &quot;Other installation methods&quot;">‚Äã</a></h3><p>If you don&#39;t want to use the above scripts to install Xmake, visit the <a href="https://xmake.io/#/guide/installation" target="_blank" rel="noreferrer">Installation Guide</a> for other installation methods (building from source, package managers, etc.).</p><h2 id="simple-project-description" tabindex="-1">Simple Project Description <a class="header-anchor" href="#simple-project-description" aria-label="Permalink to &quot;Simple Project Description&quot;">‚Äã</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Creates a new target <code>console</code> of kind <code>binary</code>, and adds all the files ending in <code>.c</code> in the <code>src</code> directory.</p><h2 id="package-dependences" tabindex="-1">Package dependences <a class="header-anchor" href="#package-dependences" aria-label="Permalink to &quot;Package dependences&quot;">‚Äã</a></h2><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbox 1.6.*&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libpng ~1.6&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Adds a requirement of tbox v1.6, zlib (any version), and libpng v1.6.</p><p>The official xmake package repository exists at: <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a></p><p align="center"><img src="https://github.com/xmake-io/xmake-docs/raw/master/assets/img/index/package.gif" width="650px"></p><h2 id="commandline-interface-reference" tabindex="-1">Commandline interface reference <a class="header-anchor" href="#commandline-interface-reference" aria-label="Permalink to &quot;Commandline interface reference&quot;">‚Äã</a></h2><p>The below assumes you are currently in the project&#39;s root directory.</p><h3 id="build-a-project" tabindex="-1">Build a project <a class="header-anchor" href="#build-a-project" aria-label="Permalink to &quot;Build a project&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span></span></code></pre></div><h3 id="run-target" tabindex="-1">Run target <a class="header-anchor" href="#run-target" aria-label="Permalink to &quot;Run target&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span></code></pre></div><h3 id="debug-target" tabindex="-1">Debug target <a class="header-anchor" href="#debug-target" aria-label="Permalink to &quot;Debug target&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span></code></pre></div><h3 id="configure-platform" tabindex="-1">Configure platform <a class="header-anchor" href="#configure-platform" aria-label="Permalink to &quot;Configure platform&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [windows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">macosx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iphoneos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [x86</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span></span></code></pre></div><h3 id="menu-configuration" tabindex="-1">Menu configuration <a class="header-anchor" href="#menu-configuration" aria-label="Permalink to &quot;Menu configuration&quot;">‚Äã</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --menu</span></span></code></pre></div><p align="center"><img src="https://xmake.io/assets/img/index/menuconf.png" width="650px"></p><h2 id="supported-platforms" tabindex="-1">Supported platforms <a class="header-anchor" href="#supported-platforms" aria-label="Permalink to &quot;Supported platforms&quot;">‚Äã</a></h2><ul><li>Windows (x86, x64)</li><li>macOS (i386, x86_64, arm64)</li><li>Linux (i386, x86_64, cross-toolchains ..)</li><li>*BSD (i386, x86_64)</li><li>Android (x86, x86_64, armeabi, armeabi-v7a, arm64-v8a)</li><li>iOS (armv7, armv7s, arm64, i386, x86_64)</li><li>WatchOS (armv7k, i386)</li><li>AppleTVOS (armv7, arm64, i386, x86_64)</li><li>MSYS (i386, x86_64)</li><li>MinGW (i386, x86_64, arm, arm64)</li><li>Cygwin (i386, x86_64)</li><li>Wasm (wasm32)</li><li>Cross (cross-toolchains ..)</li></ul><h2 id="supported-toolchains" tabindex="-1">Supported toolchains <a class="header-anchor" href="#supported-toolchains" aria-label="Permalink to &quot;Supported toolchains&quot;">‚Äã</a></h2><h3 id="ide-tied" tabindex="-1">IDE-Tied <a class="header-anchor" href="#ide-tied" aria-label="Permalink to &quot;IDE-Tied&quot;">‚Äã</a></h3><ul><li>Xcode</li><li>MSVC (Microsoft Visual C compiler)</li><li>Android NDK</li></ul><h3 id="languages" tabindex="-1">Languages <a class="header-anchor" href="#languages" aria-label="Permalink to &quot;Languages&quot;">‚Äã</a></h3><ul><li>Zig</li><li>Go(lang)</li><li>Swift</li><li>Nim</li><li>Rust</li><li>GCC (GNU Compiler Collection)</li><li>Clang</li><li>TinyCC</li><li>icc (Intel C Compiler)</li><li>icpc (Intel C++ Compiler)</li><li>icx (Intel LLVM C/C++ Compiler)</li><li>Clang-CL (Clang Compatability with MSVC)</li><li>DPC++ (Intel LLVM C++ Compiler using SYCL)</li><li>MinGW (GNU for Windows)</li><li>C51 (Keil C Compiler for the 8051)</li><li>GNU-RM (GNU Arm Embedded Toolchain)</li><li>ArmCC (Keil C Compiler for Keil MKD Version 5)</li><li>Circle (New C++20 compiler)</li><li>WASI (C/C++ WebAssembly Toolchain)</li><li>ArmClang (Version 6 of the Keil MDK)</li><li>SDCC (Small Device C Compiler)</li><li>GDC (GNU D Compiler)</li><li>LDC (LLVM D Compiler)</li><li>DMD (Dlang)</li><li>FPC (Free Pascal Programming Language Compiler)</li><li>GFortran (GNU Fortran Compiler)</li><li>Ifort (Intel Fortran Compiler)</li><li>CUDA (nvcc, nvc, nvc++, nvfortran)</li><li>Emscripten</li><li>LLVM</li><li>Icarus Verilog</li><li>Verilator (SystemVerilog simulator and lint system)</li></ul><h3 id="assemblers" tabindex="-1">Assemblers <a class="header-anchor" href="#assemblers" aria-label="Permalink to &quot;Assemblers&quot;">‚Äã</a></h3><ul><li>FASM</li><li>NASM</li><li>YASM</li><li>MASM32 (Microsoft Macro Assembler 32-bit SDK)</li></ul><h2 id="supported-languages" tabindex="-1">Supported languages <a class="header-anchor" href="#supported-languages" aria-label="Permalink to &quot;Supported languages&quot;">‚Äã</a></h2><ul><li>C and C++</li><li>Objective-C and Objective-C++</li><li>Swift</li><li>Assembly</li><li>Golang</li><li>Rust</li><li>Dlang</li><li>Fortran</li><li>Cuda</li><li>Zig</li><li>Vala</li><li>Pascal</li><li>Nim</li><li>Verilog</li><li>FASM</li><li>NASM</li><li>YASM</li><li>MASM32</li></ul><h2 id="features" tabindex="-1">Features <a class="header-anchor" href="#features" aria-label="Permalink to &quot;Features&quot;">‚Äã</a></h2><p>Xmake exhibits:</p><ul><li>Simple yet flexible configuration grammar.</li><li>Quick, dependency-free installation.</li><li>Easy compilation for most all supported platforms.</li><li>Supports cross-compilation with intelligent analysis of cross toolchain information.</li><li>Extremely fast parallel compilation support.</li><li>Supports C++ modules (new in C++20).</li><li>Supports cross-platform C/C++ dependencies with built-in package manager.</li><li>Multi-language compilation support including mixed-language projects.</li><li>Rich plug-in support with various project generators (ex. Visual Studio/Makefiles/CMake/<code>compile_commands.json</code>)</li><li>REPL interactive execution support</li><li>Incremental compilation support with automatic analysis of header files</li><li>Built-in toolchain management</li><li>A large number of expansion modules</li><li>Remote compilation support</li><li>Distributed compilation support</li><li>Local and remote build cache support</li></ul><h2 id="supported-project-types" tabindex="-1">Supported Project Types <a class="header-anchor" href="#supported-project-types" aria-label="Permalink to &quot;Supported Project Types&quot;">‚Äã</a></h2><p>Xmake supports the below types of projects:</p><ul><li>Static libraries</li><li>Shared libraries</li><li>Console/CLI applications</li><li>CUDA programs</li><li>Qt applications</li><li>WDK drivers (umdf/kmdf/wdm)</li><li>WinSDK applications</li><li>MFC applications</li><li>Darwin applications (with metal support)</li><li>Frameworks and bundles (in Darwin)</li><li>SWIG modules (Lua, Python, ...)</li><li>LuaRocks modules</li><li>Protobuf programs</li><li>Lex/Yacc programs</li><li>Linux kernel modules</li></ul><h2 id="package-management" tabindex="-1">Package management <a class="header-anchor" href="#package-management" aria-label="Permalink to &quot;Package management&quot;">‚Äã</a></h2><h3 id="download-and-build" tabindex="-1">Download and build <a class="header-anchor" href="#download-and-build" aria-label="Permalink to &quot;Download and build&quot;">‚Äã</a></h3><p>Xmake can automatically fetch and install dependencies!</p><p align="center"><img src="https://xmake.io/assets/img/index/package_manage.png" width="650px"></p><h3 id="supported-package-repositories" tabindex="-1">Supported package repositories <a class="header-anchor" href="#supported-package-repositories" aria-label="Permalink to &quot;Supported package repositories&quot;">‚Äã</a></h3><ul><li>Official package repository <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a> (tbox &gt;1.6.1)</li><li>Official package manager <a href="https://github.com/xmake-io/xrepo" target="_blank" rel="noreferrer">Xrepo</a></li><li><a href="https://xmake.io/#/package/remote_package?id=using-self-built-private-package-repository" target="_blank" rel="noreferrer">User-built repositories</a></li><li>Conan (conan::openssl/1.1.1g)</li><li>Conda (conda::libpng 1.3.67)</li><li>Vcpkg (vcpkg::ffmpeg)</li><li>Homebrew/Linuxbrew (brew::pcre2/libpcre2-8)</li><li>Pacman on archlinux/msys2 (pacman::libcurl)</li><li>Apt on ubuntu/debian (apt::zlib1g-dev)</li><li>Clib (clib::clibs/bytes@0.0.4)</li><li>Dub (dub::log 0.4.3)</li><li>Portage on Gentoo/Linux (portage::libhandy)</li><li>Nimble for nimlang (nimble::zip &gt;1.3)</li><li>Cargo for rust (cargo::base64 0.13.0)</li></ul><h3 id="package-management-features" tabindex="-1">Package management features <a class="header-anchor" href="#package-management-features" aria-label="Permalink to &quot;Package management features&quot;">‚Äã</a></h3><ul><li>The official repository provides nearly 500+ packages with simple compilation on all supported platforms</li><li>Full platform package support, support for cross-compiled dependent packages</li><li>Support package virtual environment using <code>xrepo env shell</code></li><li>Precompiled package acceleration for Windows (NT)</li><li>Support self-built package repositories and private repository deployment</li><li>Third-party package repository support for repositories such as: vcpkg, conan, conda, etc.</li><li>Supports automatic pulling of remote toolchains</li><li>Supports dependency version locking</li></ul><h2 id="processing-architecture" tabindex="-1">Processing architecture <a class="header-anchor" href="#processing-architecture" aria-label="Permalink to &quot;Processing architecture&quot;">‚Äã</a></h2><p>Below is a diagram showing roughly the architecture of Xmake, and thus how it functions.</p><p align="center"><img src="https://xmake.io/assets/img/index/package_arch.png" width="650px"></p><h2 id="distributed-compilation" tabindex="-1">Distributed Compilation <a class="header-anchor" href="#distributed-compilation" aria-label="Permalink to &quot;Distributed Compilation&quot;">‚Äã</a></h2><ul><li>[X] Cross-platform support.</li><li>[X] Support for MSVC, Clang, GCC and other cross-compilation toolchains.</li><li>[X] Support for building for Android, Linux, Windows NT, and Darwin hosts.</li><li>[X] No dependencies other than the compilation toolchain.</li><li>[X] Support for build server load balancing scheduling.</li><li>[X] Support for real time compressed transfer of large files (lz4).</li><li>[X] Almost zero configuration cost, no shared filesystem required, for convenience and security.</li></ul><p>For more details see: <a href="https://github.com/xmake-io/xmake/issues/274" target="_blank" rel="noreferrer">#274</a></p><h2 id="remote-compilation" tabindex="-1">Remote Compilation <a class="header-anchor" href="#remote-compilation" aria-label="Permalink to &quot;Remote Compilation&quot;">‚Äã</a></h2><p>For more details see: <a href="https://github.com/xmake-io/xmake/issues/622" target="_blank" rel="noreferrer">#622</a></p><h2 id="local-remote-build-cache" tabindex="-1">Local/Remote Build Cache <a class="header-anchor" href="#local-remote-build-cache" aria-label="Permalink to &quot;Local/Remote Build Cache&quot;">‚Äã</a></h2><p>For more details see: <a href="https://github.com/xmake-io/xmake/issues/2371" target="_blank" rel="noreferrer">#622</a></p><h2 id="benchmark" tabindex="-1">Benchmark <a class="header-anchor" href="#benchmark" aria-label="Permalink to &quot;Benchmark&quot;">‚Äã</a></h2><p>Xmake&#39;s speed on is par with Ninja! The test project: <a href="https://github.com/xmake-io/xmake/tree/master/core" target="_blank" rel="noreferrer">xmake-core</a></p><h3 id="multi-task-parallel-compilation" tabindex="-1">Multi-task parallel compilation <a class="header-anchor" href="#multi-task-parallel-compilation" aria-label="Permalink to &quot;Multi-task parallel compilation&quot;">‚Äã</a></h3><table tabindex="0"><thead><tr><th>buildsystem</th><th>Termux (8core/-j12)</th><th>buildsystem</th><th>MacOS (8core/-j12)</th></tr></thead><tbody><tr><td>xmake</td><td>24.890s</td><td>xmake</td><td>12.264s</td></tr><tr><td>ninja</td><td>25.682s</td><td>ninja</td><td>11.327s</td></tr><tr><td>cmake(gen+make)</td><td>5.416s+28.473s</td><td>cmake(gen+make)</td><td>1.203s+14.030s</td></tr><tr><td>cmake(gen+ninja)</td><td>4.458s+24.842s</td><td>cmake(gen+ninja)</td><td>0.988s+11.644s</td></tr></tbody></table><h2 id="single-task-compilation" tabindex="-1">Single task compilation <a class="header-anchor" href="#single-task-compilation" aria-label="Permalink to &quot;Single task compilation&quot;">‚Äã</a></h2><table tabindex="0"><thead><tr><th>buildsystem</th><th>Termux (-j1)</th><th>buildsystem</th><th>MacOS (-j1)</th></tr></thead><tbody><tr><td>xmake</td><td>1m57.707s</td><td>xmake</td><td>39.937s</td></tr><tr><td>ninja</td><td>1m52.845s</td><td>ninja</td><td>38.995s</td></tr><tr><td>cmake(gen+make)</td><td>5.416s+2m10.539s</td><td>cmake(gen+make)</td><td>1.203s+41.737s</td></tr><tr><td>cmake(gen+ninja)</td><td>4.458s+1m54.868s</td><td>cmake(gen+ninja)</td><td>0.988s+38.022s</td></tr></tbody></table><h2 id="more-examples" tabindex="-1">More Examples <a class="header-anchor" href="#more-examples" aria-label="Permalink to &quot;More Examples&quot;">‚Äã</a></h2><h3 id="debug-and-release-profiles" tabindex="-1">Debug and release profiles <a class="header-anchor" href="#debug-and-release-profiles" aria-label="Permalink to &quot;Debug and release profiles&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mode.debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mode.release&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> is_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        add_defines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span></code></pre></div><h3 id="custom-scripts" tabindex="-1">Custom scripts <a class="header-anchor" href="#custom-scripts" aria-label="Permalink to &quot;Custom scripts&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    after_build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (target)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello: %s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        os.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo %s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">targetfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="automatic-integration-of-dependent-packages" tabindex="-1">Automatic integration of dependent packages <a class="header-anchor" href="#automatic-integration-of-dependent-packages" aria-label="Permalink to &quot;Automatic integration of dependent packages&quot;">‚Äã</a></h3><p>Download and use packages in <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a> or third-party repositories:</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbox &gt;1.6.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libuv master&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vcpkg::ffmpeg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brew::pcre2/libpcre2-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;conan::openssl/1.1.1g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {alias </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openssl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, optional </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, debug </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbox&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libuv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vcpkg::ffmpeg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brew::pcre2/libpcre2-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;openssl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>In addition, we can also use the <a href="https://github.com/xmake-io/xrepo" target="_blank" rel="noreferrer">xrepo</a> command to quickly install dependencies.</p><h3 id="qt-quickapp-program" tabindex="-1">Qt QuickApp Program <a class="header-anchor" href="#qt-quickapp-program" aria-label="Permalink to &quot;Qt QuickApp Program&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qt.quickapp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/qml.qrc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="cuda-program" tabindex="-1">Cuda Program <a class="header-anchor" href="#cuda-program" aria-label="Permalink to &quot;Cuda Program&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_cugencodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;native&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_cugencodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compute_35&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="wdk-umdf-driver-program" tabindex="-1">WDK/UMDF Driver Program <a class="header-anchor" href="#wdk-umdf-driver-program" aria-label="Permalink to &quot;WDK/UMDF Driver Program&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.driver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.env.umdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;driver/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;driver/*.inx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_includedirs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.env.umdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exe/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>For more WDK driver examples (UMDF/KMDF/WDM), please visit <a href="https://xmake.io/#/guide/project_examples?id=wdk-driver-program" target="_blank" rel="noreferrer">WDK Program Examples</a></p><h3 id="darwin-applications" tabindex="-1">Darwin Applications <a class="header-anchor" href="#darwin-applications" aria-label="Permalink to &quot;Darwin Applications&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xcode.application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**.storyboard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.xcassets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/Info.plist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="framework-and-bundle-program-darwin" tabindex="-1">Framework and Bundle Program (Darwin) <a class="header-anchor" href="#framework-and-bundle-program-darwin" aria-label="Permalink to &quot;Framework and Bundle Program (Darwin)&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xcode.framework&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- or xcode.bundle</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/Info.plist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="openmp-program" tabindex="-1">OpenMP Program <a class="header-anchor" href="#openmp-program" aria-label="Permalink to &quot;OpenMP Program&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libomp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {optional </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loop&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c++.openmp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libomp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="zig-program" tabindex="-1">Zig Program <a class="header-anchor" href="#zig-program" aria-label="Permalink to &quot;Zig Program&quot;">‚Äã</a></h3><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main.zig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="automatically-fetch-remote-toolchain" tabindex="-1">Automatically fetch remote toolchain <a class="header-anchor" href="#automatically-fetch-remote-toolchain" aria-label="Permalink to &quot;Automatically fetch remote toolchain&quot;">‚Äã</a></h3><h4 id="fetch-a-special-version-of-llvm" tabindex="-1">fetch a special version of LLVM <a class="header-anchor" href="#fetch-a-special-version-of-llvm" aria-label="Permalink to &quot;fetch a special version of LLVM&quot;">‚Äã</a></h4><p>Require the Clang version packaged with LLM-10 to compile a project.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;llvm 10.x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {alias </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;llvm-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_toolchains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;llvm@llvm-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="fetch-a-cross-compilation-toolchain" tabindex="-1">Fetch a cross-compilation toolchain <a class="header-anchor" href="#fetch-a-cross-compilation-toolchain" aria-label="Permalink to &quot;Fetch a cross-compilation toolchain&quot;">‚Äã</a></h4><p>We can also pull a specified cross-compilation toolchain in to compile the project.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_toolchains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="fetch-toolchain-and-packages" tabindex="-1">Fetch toolchain and packages <a class="header-anchor" href="#fetch-toolchain-and-packages" aria-label="Permalink to &quot;Fetch toolchain and packages&quot;">‚Äã</a></h4><p>We can also use the specified <code>muslcc</code> cross-compilation toolchain to compile and integrate all dependent packages.</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {system </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_toolchains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="plugins" tabindex="-1">Plugins <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;Plugins&quot;">‚Äã</a></h2><h4 id="generate-ide-project-file-plugin-makefile-vs2002-vs2022" tabindex="-1">Generate IDE project file pluginÔºàmakefile, vs2002 - vs2022 .. Ôºâ <a class="header-anchor" href="#generate-ide-project-file-plugin-makefile-vs2002-vs2022" aria-label="Permalink to &quot;Generate IDE project file pluginÔºàmakefile, vs2002 - vs2022 .. Ôºâ&quot;">‚Äã</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vsxmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;debug,release&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # New vsproj generator (Recommended)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;debug,release&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile_commands</span></span></code></pre></div><h4 id="run-a-custom-lua-script-plugin" tabindex="-1">Run a custom lua script plugin <a class="header-anchor" href="#run-a-custom-lua-script-plugin" aria-label="Permalink to &quot;Run a custom lua script plugin&quot;">‚Äã</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./test.lua</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;print(&#39;hello xmake!&#39;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib.detect.find_tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> print(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;hello xmake!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    1,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    2,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>To see a list of bultin plugs, please visit <a href="https://xmake.io/#/plugin/builtin_plugins" target="_blank" rel="noreferrer">Builtin plugins</a>.</p><p>Please download and install other plugins from the plugins repository <a href="https://github.com/xmake-io/xmake-plugins" target="_blank" rel="noreferrer">xmake-plugins</a>.</p><h2 id="ide-editor-integration" tabindex="-1">IDE/Editor Integration <a class="header-anchor" href="#ide-editor-integration" aria-label="Permalink to &quot;IDE/Editor Integration&quot;">‚Äã</a></h2><ul><li><a href="https://github.com/xmake-io/xmake-vscode" target="_blank" rel="noreferrer">xmake-vscode</a></li></ul><img src="https://raw.githubusercontent.com/xmake-io/xmake-vscode/master/res/problem.gif" width="650px"><ul><li><a href="https://github.com/xmake-io/xmake-sublime" target="_blank" rel="noreferrer">xmake-sublime</a></li></ul><img src="https://raw.githubusercontent.com/xmake-io/xmake-sublime/master/res/problem.gif" width="650px"><ul><li><a href="https://github.com/xmake-io/xmake-idea" target="_blank" rel="noreferrer">xmake-idea</a></li></ul><img src="https://raw.githubusercontent.com/xmake-io/xmake-idea/master/res/problem.gif" width="650px"><ul><li><a href="https://github.com/Mythos-404/xmake.nvim" target="_blank" rel="noreferrer">xmake.nvim</a> (third-party, thanks <a href="https://github.com/Mythos-404" target="_blank" rel="noreferrer">@Mythos_404</a>)</li></ul><img src="https://raw.githubusercontent.com/Mythos-404/xmake.nvim/main/assets/XmakePreview.gif" width="650px"><ul><li><a href="https://github.com/luzhlon/xmake.vim" target="_blank" rel="noreferrer">xmake.vim</a> (third-party, thanks <a href="https://github.com/luzhlon" target="_blank" rel="noreferrer">@luzhlon</a>)</li><li><a href="https://github.com/HelloWorld886/xmake-visualstudio" target="_blank" rel="noreferrer">xmake-visualstudio</a> (third-party, thanks <a href="https://github.com/HelloWorld886" target="_blank" rel="noreferrer">@HelloWorld886</a>)</li><li><a href="https://github.com/Arthapz/xmake-project-manager" target="_blank" rel="noreferrer">xmake-qtcreator</a> (third-party, thanks <a href="https://github.com/Arthapz" target="_blank" rel="noreferrer">@Arthapz</a>)</li></ul><h3 id="xmake-gradle-plugin-jni" tabindex="-1">Xmake Gradle Plugin (JNI) <a class="header-anchor" href="#xmake-gradle-plugin-jni" aria-label="Permalink to &quot;Xmake Gradle Plugin (JNI)&quot;">‚Äã</a></h3><p>We can use the <a href="https://github.com/xmake-io/xmake-gradle" target="_blank" rel="noreferrer">xmake-gradle</a> plugin to compile JNI libraries via gradle.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plugins {</span></span>
<span class="line"><span>  id &#39;org.tboox.gradle-xmake-plugin&#39; version &#39;1.1.5&#39;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>android {</span></span>
<span class="line"><span>    externalNativeBuild {</span></span>
<span class="line"><span>        xmake {</span></span>
<span class="line"><span>            path &quot;jni/xmake.lua&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>The <code>xmakeBuild</code> task will be injected into the <code>assemble</code> task automatically if the <code>gradle-xmake-plugin</code> has been applied.</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ ./gradlew app:assembleDebug</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeConfigureForArm64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeBuildForArm64</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; xmake build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 50%]: cache compiling.debug nativelib.cc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 75%]: linking.debug libnativelib.so</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[100%]: build ok!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; install artifacts to /Users/ruki/projects/personal/xmake-gradle/nativelib/libs/arm64-v8a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeConfigureForArmv7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeBuildForArmv7</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; xmake build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 50%]: cache compiling.debug nativelib.cc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 75%]: linking.debug libnativelib.so</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[100%]: build ok!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; install artifacts to /Users/ruki/projects/personal/xmake-gradle/nativelib/libs/armeabi-v7a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:preBuild</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:assemble</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :app:assembleDebug</span></span></code></pre></div><h2 id="ci-integration" tabindex="-1">CI Integration <a class="header-anchor" href="#ci-integration" aria-label="Permalink to &quot;CI Integration&quot;">‚Äã</a></h2><h3 id="github-action" tabindex="-1">GitHub Action <a class="header-anchor" href="#github-action" aria-label="Permalink to &quot;GitHub Action&quot;">‚Äã</a></h3><p>The <a href="https://github.com/xmake-io/github-action-setup-xmake" target="_blank" rel="noreferrer">github-action-setup-xmake</a> plugin for GitHub Actions can allow you to use Xmake with minimal efforts if you use GitHub Actions for your CI pipeline.</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">xmake-io/github-action-setup-xmake@v1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  xmake-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">latest</span></span></code></pre></div><h2 id="who-is-using-xmake" tabindex="-1">Who is using Xmake? <a class="header-anchor" href="#who-is-using-xmake" aria-label="Permalink to &quot;Who is using Xmake?&quot;">‚Äã</a></h2><p>The list of people and projects who are using Xmake is available <a href="https://xmake.io/#/about/who_is_using_xmake" target="_blank" rel="noreferrer">here</a>.</p><p>If you are using Xmake, you are welcome to submit your information to the above list through a PR, so that other users and the developers can gauge interest. Ihis also let users to use xmake more confidently and give us motivation to continue to maintain it.</p><p>This will help the Xmake project and it&#39;s community grow stronger and expand!</p><h2 id="contacts" tabindex="-1">Contacts <a class="header-anchor" href="#contacts" aria-label="Permalink to &quot;Contacts&quot;">‚Äã</a></h2><ul><li>EmailÔºö<a href="mailto:waruqi@gmail.com" target="_blank" rel="noreferrer">waruqi@gmail.com</a></li><li>HomepageÔºö<a href="https://xmake.io" target="_blank" rel="noreferrer">xmake.io</a></li><li>Community <ul><li><a href="https://www.reddit.com/r/xmake/" target="_blank" rel="noreferrer">Chat on Reddit</a></li><li><a href="https://t.me/tbooxorg" target="_blank" rel="noreferrer">Chat on Telegram</a></li><li><a href="https://discord.gg/xmake" target="_blank" rel="noreferrer">Chat on Discord</a></li><li>Chat on QQ Group: 343118190, 662147501</li></ul></li><li>Source CodeÔºö<a href="https://github.com/xmake-io/xmake" target="_blank" rel="noreferrer">GitHub</a>, <a href="https://gitee.com/tboox/xmake" target="_blank" rel="noreferrer">Gitee</a></li><li>WeChat Public: tboox-os</li></ul><h2 id="thanks" tabindex="-1">Thanks <a class="header-anchor" href="#thanks" aria-label="Permalink to &quot;Thanks&quot;">‚Äã</a></h2><p>This project exists thanks to all the people who have <a href="/xmake-docs/CONTRIBUTING.html">contributed</a>: <a href="https://github.com/xmake-io/xmake/graphs/contributors"><img src="https://opencollective.com/xmake/contributors.svg?width=890&amp;button=false"></a></p><ul><li><a href="https://github.com/TitanSnow" target="_blank" rel="noreferrer">TitanSnow</a>: Provide the xmake <a href="https://github.com/TitanSnow/ts-xmake-logo" target="_blank" rel="noreferrer">logo</a> and install scripts</li><li><a href="https://github.com/uael" target="_blank" rel="noreferrer">uael</a>: Provide the semantic versioning library <a href="https://github.com/uael/sv" target="_blank" rel="noreferrer">sv</a></li><li><a href="https://github.com/OpportunityLiu" target="_blank" rel="noreferrer">OpportunityLiu</a>: Improve cuda, tests and ci</li><li><a href="https://github.com/xq114" target="_blank" rel="noreferrer">xq144</a>: Improve <code>xrepo env shell</code>, and contribute a lot of packages to the <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a> repository.</li><li><code>enderger</code>: Helped smooth out the edges on the English translation of the README</li></ul>`,155)]))}const g=s(l,[["render",n]]);export{c as __pageData,g as default};
