import{_ as i,c as a,a2 as t,o as l}from"./chunks/framework.CQcFAaaG.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"zh-cn/README.md","filePath":"zh-cn/README.md"}'),n={name:"zh-cn/README.md"};function h(e,s,k,p,r,d){return l(),a("div",null,s[0]||(s[0]=[t(`<h2 id="项目支持" tabindex="-1">项目支持 <a class="header-anchor" href="#项目支持" aria-label="Permalink to &quot;项目支持&quot;">​</a></h2><p>通过<a href="https://xmake.io/#/about/sponsor" target="_blank" rel="noreferrer">成为赞助者</a>来支持该项目。您的logo将显示在此处，并带有指向您网站的链接。🙏</p><p><a href="https://opencollective.com/xmake#sponsors" target="_blank"><img src="https://opencollective.com/xmake/sponsors.svg?width=890"></a><a href="https://opencollective.com/xmake#backers" target="_blank"><img src="https://opencollective.com/xmake/backers.svg?width=600"></a></p><h2 id="技术支持" tabindex="-1">技术支持 <a class="header-anchor" href="#技术支持" aria-label="Permalink to &quot;技术支持&quot;">​</a></h2><p>你也可以考虑通过 <a href="https://github.com/sponsors/waruqi" target="_blank" rel="noreferrer">Github 的赞助计划</a> 赞助我们来获取额外的技术支持服务，然后你就能获取 <a href="https://github.com/xmake-io/technical-support" target="_blank" rel="noreferrer">xmake-io/technical-support</a> 仓库的访问权限，获取更多技术咨询相关的信息。</p><ul><li>[x] 更高优先级的 Issues 问题处理</li><li>[x] 一对一技术咨询服务</li><li>[x] Review xmake.lua 并提供改进建议</li></ul><h2 id="简介" tabindex="-1">简介 <a class="header-anchor" href="#简介" aria-label="Permalink to &quot;简介&quot;">​</a></h2><p>Xmake 是一个基于 Lua 的轻量级跨平台构建工具。</p><p>它非常的轻量，没有任何依赖，因为它内置了 Lua 运行时。</p><p>它使用 xmake.lua 维护项目构建，相比 makefile/CMakeLists.txt，配置语法更加简洁直观，对新手非常友好，短时间内就能快速入门，能够让用户把更多的精力集中在实际的项目开发上。</p><p>我们能够使用它像 Make/Ninja 那样可以直接编译项目，也可以像 CMake/Meson 那样生成工程文件，另外它还有内置的包管理系统来帮助用户解决 C/C++ 依赖库的集成使用问题。</p><p>目前，Xmake 主要用于 C/C++ 项目的构建，但是同时也支持其他 native 语言的构建，可以实现跟 C/C++ 进行混合编译，同时编译速度也是非常的快，可以跟 Ninja 持平。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Xmake = Build backend + Project Generator + Package Manager + [Remote|Distributed] Build + Cache</span></span></code></pre></div><p>尽管不是很准确，但我们还是可以把 Xmake 按下面的方式来理解：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Xmake ≈ Make/Ninja + CMake/Meson + Vcpkg/Conan + distcc + ccache/sccache</span></span></code></pre></div><p>如果你想要了解更多，请参考：<a href="https://xmake.io/#/zh-cn/getting_started" target="_blank" rel="noreferrer">在线文档</a>, <a href="https://github.com/xmake-io/xmake" target="_blank" rel="noreferrer">Github</a>以及<a href="https://gitee.com/tboox/xmake" target="_blank" rel="noreferrer">Gitee</a>，同时也欢迎加入我们的 <a href="https://xmake.io/#/zh-ch/about/contact" target="_blank" rel="noreferrer">社区</a>.</p><h2 id="课程" tabindex="-1">课程 <a class="header-anchor" href="#课程" aria-label="Permalink to &quot;课程&quot;">​</a></h2><p>xmake 官方也推出了一些入门课程，带你一步步快速上手 xmake，课程列表如下：</p><ul><li><a href="https://xmake.io/#/zh-cn/about/course" target="_blank" rel="noreferrer">Xmake 带你轻松构建 C/C++ 项目</a></li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h4 id="使用curl" tabindex="-1">使用curl <a class="header-anchor" href="#使用curl" aria-label="Permalink to &quot;使用curl&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://xmake.io/shget.text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h4 id="使用wget" tabindex="-1">使用wget <a class="header-anchor" href="#使用wget" aria-label="Permalink to &quot;使用wget&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://xmake.io/shget.text</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><h4 id="使用powershell" tabindex="-1">使用powershell <a class="header-anchor" href="#使用powershell" aria-label="Permalink to &quot;使用powershell&quot;">​</a></h4><div class="language-powershell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">powershell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Invoke-Expression</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Invoke-Webrequest</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://xmake.io/psget.text&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">UseBasicParsing).Content</span></span></code></pre></div><h4 id="其他安装方式" tabindex="-1">其他安装方式 <a class="header-anchor" href="#其他安装方式" aria-label="Permalink to &quot;其他安装方式&quot;">​</a></h4><p>如果不想使用脚本安装，也可以点击查看 <a href="https://xmake.io/#/zh-cn/guide/installation" target="_blank" rel="noreferrer">安装文档</a>，了解其他安装方法。</p><h2 id="简单的工程描述" tabindex="-1">简单的工程描述 <a class="header-anchor" href="#简单的工程描述" aria-label="Permalink to &quot;简单的工程描述&quot;">​</a></h2><img src="https://xmake.io/assets/img/index/showcode1.png" width="340px"><h2 id="包依赖描述" tabindex="-1">包依赖描述 <a class="header-anchor" href="#包依赖描述" aria-label="Permalink to &quot;包依赖描述&quot;">​</a></h2><img src="https://xmake.io/assets/img/index/add_require.png" width="600px"><p>官方的xmake包管理仓库: <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a></p><h2 id="构建工程" tabindex="-1">构建工程 <a class="header-anchor" href="#构建工程" aria-label="Permalink to &quot;构建工程&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span></span></code></pre></div><h2 id="运行目标" tabindex="-1">运行目标 <a class="header-anchor" href="#运行目标" aria-label="Permalink to &quot;运行目标&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span></code></pre></div><h2 id="调试程序" tabindex="-1">调试程序 <a class="header-anchor" href="#调试程序" aria-label="Permalink to &quot;调试程序&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> console</span></span></code></pre></div><h2 id="配置平台" tabindex="-1">配置平台 <a class="header-anchor" href="#配置平台" aria-label="Permalink to &quot;配置平台&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [windows</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">linux</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">macosx</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">android</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iphoneos</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [x86</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arm64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ..]</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [debug</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">release]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span></span></code></pre></div><h2 id="图形化菜单配置" tabindex="-1">图形化菜单配置 <a class="header-anchor" href="#图形化菜单配置" aria-label="Permalink to &quot;图形化菜单配置&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --menu</span></span></code></pre></div><img src="https://xmake.io/assets/img/index/menuconf.png" width="650px"><h2 id="跟ninja一样快的构建速度" tabindex="-1">跟ninja一样快的构建速度 <a class="header-anchor" href="#跟ninja一样快的构建速度" aria-label="Permalink to &quot;跟ninja一样快的构建速度&quot;">​</a></h2><p>测试工程: <a href="https://github.com/xmake-io/xmake/tree/master/core" target="_blank" rel="noreferrer">xmake-core</a></p><h3 id="多任务并行编译测试" tabindex="-1">多任务并行编译测试 <a class="header-anchor" href="#多任务并行编译测试" aria-label="Permalink to &quot;多任务并行编译测试&quot;">​</a></h3><table tabindex="0"><thead><tr><th>构建系统</th><th>Termux (8core/-j12)</th><th>构建系统</th><th>MacOS (8core/-j12)</th></tr></thead><tbody><tr><td>xmake</td><td>24.890s</td><td>xmake</td><td>12.264s</td></tr><tr><td>ninja</td><td>25.682s</td><td>ninja</td><td>11.327s</td></tr><tr><td>cmake(gen+make)</td><td>5.416s+28.473s</td><td>cmake(gen+make)</td><td>1.203s+14.030s</td></tr><tr><td>cmake(gen+ninja)</td><td>4.458s+24.842s</td><td>cmake(gen+ninja)</td><td>0.988s+11.644s</td></tr></tbody></table><h3 id="单任务编译测试" tabindex="-1">单任务编译测试 <a class="header-anchor" href="#单任务编译测试" aria-label="Permalink to &quot;单任务编译测试&quot;">​</a></h3><table tabindex="0"><thead><tr><th>构建系统</th><th>Termux (-j1)</th><th>构建系统</th><th>MacOS (-j1)</th></tr></thead><tbody><tr><td>xmake</td><td>1m57.707s</td><td>xmake</td><td>39.937s</td></tr><tr><td>ninja</td><td>1m52.845s</td><td>ninja</td><td>38.995s</td></tr><tr><td>cmake(gen+make)</td><td>5.416s+2m10.539s</td><td>cmake(gen+make)</td><td>1.203s+41.737s</td></tr><tr><td>cmake(gen+ninja)</td><td>4.458s+1m54.868s</td><td>cmake(gen+ninja)</td><td>0.988s+38.022s</td></tr></tbody></table><h2 id="包依赖管理" tabindex="-1">包依赖管理 <a class="header-anchor" href="#包依赖管理" aria-label="Permalink to &quot;包依赖管理&quot;">​</a></h2><h3 id="下载和编译" tabindex="-1">下载和编译 <a class="header-anchor" href="#下载和编译" aria-label="Permalink to &quot;下载和编译&quot;">​</a></h3><img src="https://xmake.io/assets/img/index/package_manage.png" width="650px"><h3 id="架构和流程" tabindex="-1">架构和流程 <a class="header-anchor" href="#架构和流程" aria-label="Permalink to &quot;架构和流程&quot;">​</a></h3><img src="https://xmake.io/assets/img/index/package_arch.png" width="650px"><h3 id="支持的包管理仓库" tabindex="-1">支持的包管理仓库 <a class="header-anchor" href="#支持的包管理仓库" aria-label="Permalink to &quot;支持的包管理仓库&quot;">​</a></h3><ul><li>官方自建仓库 <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a> (tbox &gt;1.6.1)</li><li>官方包管理器 <a href="https://github.com/xmake-io/xrepo" target="_blank" rel="noreferrer">Xrepo</a></li><li><a href="https://xmake.io/#/zh-cn/package/remote_package?id=%e4%bd%bf%e7%94%a8%e8%87%aa%e5%bb%ba%e7%a7%81%e6%9c%89%e5%8c%85%e4%bb%93%e5%ba%93" target="_blank" rel="noreferrer">用户自建仓库</a></li><li>Conan (conan::openssl/1.1.1g)</li><li>Conda (conda::libpng 1.3.67)</li><li>Vcpkg (vcpkg::ffmpeg)</li><li>Homebrew/Linuxbrew (brew::pcre2/libpcre2-8)</li><li>Pacman on archlinux/msys2 (pacman::libcurl)</li><li>Apt on ubuntu/debian (apt::zlib1g-dev)</li><li>Clib (clib::clibs/bytes@0.0.4)</li><li>Dub (dub::log 0.4.3)</li><li>Portage on Gentoo/Linux (portage::libhandy)</li><li>Nimble for nimlang (nimble::zip &gt;1.3)</li><li>Cargo for rust (cargo::base64 0.13.0)</li></ul><h3 id="包管理特性" tabindex="-1">包管理特性 <a class="header-anchor" href="#包管理特性" aria-label="Permalink to &quot;包管理特性&quot;">​</a></h3><ul><li>官方仓库提供近 500+ 常用包，真正做到全平台一键下载集成编译</li><li>全平台包支持，支持交叉编译的依赖包集成</li><li>支持包虚拟环境管理和加载，<code>xrepo env shell</code></li><li>Windows 云端预编译包加速</li><li>支持自建包仓库，私有仓库部署</li><li>第三方包仓库支持，提供更加丰富的包源，例如：vcpkg, conan, conda 等等</li><li>支持自动拉取使用云端工具链</li><li>支持包依赖锁定</li></ul><h2 id="支持平台" tabindex="-1">支持平台 <a class="header-anchor" href="#支持平台" aria-label="Permalink to &quot;支持平台&quot;">​</a></h2><ul><li>Windows (x86, x64)</li><li>macOS (i386, x86_64, arm64)</li><li>Linux (i386, x86_64, cross-toolchains ..)</li><li>*BSD (i386, x86_64)</li><li>Android (x86, x86_64, armeabi, armeabi-v7a, arm64-v8a)</li><li>iOS (armv7, armv7s, arm64, i386, x86_64)</li><li>WatchOS (armv7k, i386)</li><li>AppleTVOS (armv7, arm64, i386, x86_64)</li><li>MSYS (i386, x86_64)</li><li>MinGW (i386, x86_64, arm, arm64)</li><li>Cygwin (i386, x86_64)</li><li>Wasm (wasm32)</li><li>Cross (cross-toolchains ..)</li></ul><h2 id="支持工具链" tabindex="-1">支持工具链 <a class="header-anchor" href="#支持工具链" aria-label="Permalink to &quot;支持工具链&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> show</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchains</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xcode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Xcode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IDE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">msvc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Microsoft</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Visual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C/C++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yasm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Yasm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Modular</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Assembler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clang</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> family</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frontend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> LLVM</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            Go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dlang</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gfortran</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Fortran</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           Zig</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sdcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Small</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cuda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          CUDA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Toolkit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (nvcc, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nvc,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvc++,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvfortran</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ndk</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           Android</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NDK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rust</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Rust</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Swift</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">llvm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> collection</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modular</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> reusable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> technologies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cross</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Common</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cross</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compilation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nasm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          NASM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Assembler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Collection</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mingw</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Minimalist</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Windows</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gnu-rm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        GNU</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Arm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Embedded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Toolchain</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">envs</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variables</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fasm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          Flat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Assembler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tinycc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        Tiny</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">emcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compiling</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> asm.js</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WebAssembly</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">icc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           Intel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C/C++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ifort</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         Intel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Fortran</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">muslcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> musl-based</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cross-compilation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fpc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           Free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pascal</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wasi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          WASI-enabled</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> WebAssembly</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C/C++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           Nim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Programming</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Language</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">circle</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> C++20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compiler</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">armcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         ARM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Keil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MDK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">armclang</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      ARM</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Compiler</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Version</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 6</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Keil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MDK</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c51</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           Keil</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> development</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tools</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8051</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Microcontroller</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Architecture</span></span></code></pre></div><h2 id="支持语言" tabindex="-1">支持语言 <a class="header-anchor" href="#支持语言" aria-label="Permalink to &quot;支持语言&quot;">​</a></h2><ul><li>C/C++</li><li>Objc/Objc++</li><li>Swift</li><li>Assembly</li><li>Golang</li><li>Rust</li><li>Dlang</li><li>Fortran</li><li>Cuda</li><li>Zig</li><li>Vala</li><li>Pascal</li><li>Nim</li></ul><h2 id="支持特性" tabindex="-1">支持特性 <a class="header-anchor" href="#支持特性" aria-label="Permalink to &quot;支持特性&quot;">​</a></h2><ul><li>语法简单易上手</li><li>快速安装，无任何依赖</li><li>全平台一键编译</li><li>支持交叉编译，智能分析交叉工具链信息</li><li>极速，多任务并行编译支持</li><li>C++20 Module 支持</li><li>支持跨平台的 C/C++ 依赖包快速集成，内置包管理器</li><li>多语言混合编译支持</li><li>丰富的插件支持，提供各种工程生成器，例如：vs/makefile/cmakelists/compile_commands 生成插件</li><li>REPL 交互式执行支持</li><li>增量编译支持，头文件依赖自动分析</li><li>工具链的快速切换、定制化支持</li><li>丰富的扩展模块支持</li><li>远程编译支持</li><li>分布式编译支持</li><li>内置的本地和远程编译缓存支持</li></ul><h2 id="工程类型" tabindex="-1">工程类型 <a class="header-anchor" href="#工程类型" aria-label="Permalink to &quot;工程类型&quot;">​</a></h2><ul><li>静态库程序</li><li>动态库类型</li><li>控制台程序</li><li>Cuda 程序</li><li>Qt 应用程序</li><li>WDK Windows 驱动程序</li><li>WinSDK 应用程序</li><li>MFC 应用程序</li><li>iOS/MacOS 应用程序（支持.metal）</li><li>Framework和Bundle程序（iOS/MacOS）</li><li>SWIG 模块 (Lua, python, ...)</li><li>Luarocks 模块</li><li>Protobuf 程序</li><li>Lex/yacc 程序</li><li>C++20 模块</li><li>Linux 内核驱动模块</li></ul><h2 id="分布式编译" tabindex="-1">分布式编译 <a class="header-anchor" href="#分布式编译" aria-label="Permalink to &quot;分布式编译&quot;">​</a></h2><ul><li>[x] 跨平台支持</li><li>[x] 支持 msvc, clang, gcc 和交叉编译工具链</li><li>[x] 支持构建 android, ios, linux, win, macOS 程序</li><li>[x] 除了编译工具链，无任何其他依赖</li><li>[x] 支持编译服务器负载均衡调度</li><li>[x] 支持大文件实时压缩传输 (lz4)</li><li>[x] 几乎零配置成本，无需共享文件系统，更加方便和安全</li></ul><p>更多详情见：<a href="https://github.com/xmake-io/xmake/issues/274" target="_blank" rel="noreferrer">#274</a></p><h2 id="远程编译" tabindex="-1">远程编译 <a class="header-anchor" href="#远程编译" aria-label="Permalink to &quot;远程编译&quot;">​</a></h2><p>更多详情见：<a href="https://github.com/xmake-io/xmake/issues/622" target="_blank" rel="noreferrer">#622</a></p><h2 id="本地和远程编译缓存" tabindex="-1">本地和远程编译缓存 <a class="header-anchor" href="#本地和远程编译缓存" aria-label="Permalink to &quot;本地和远程编译缓存&quot;">​</a></h2><p>更多详情见: <a href="https://github.com/xmake-io/xmake/issues/2371" target="_blank" rel="noreferrer">#622</a></p><h2 id="更多例子" tabindex="-1">更多例子 <a class="header-anchor" href="#更多例子" aria-label="Permalink to &quot;更多例子&quot;">​</a></h2><h4 id="debug-和-release模式" tabindex="-1">Debug 和 Release模式 <a class="header-anchor" href="#debug-和-release模式" aria-label="Permalink to &quot;Debug 和 Release模式&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mode.debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;mode.release&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;console&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> is_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;debug&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">then</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        add_defines</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;DEBUG&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span></code></pre></div><h4 id="自定义脚本" tabindex="-1">自定义脚本 <a class="header-anchor" href="#自定义脚本" aria-label="Permalink to &quot;自定义脚本&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    after_build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (target)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;hello: %s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        os.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo %s&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">targetfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="依赖包自动集成" tabindex="-1">依赖包自动集成 <a class="header-anchor" href="#依赖包自动集成" aria-label="Permalink to &quot;依赖包自动集成&quot;">​</a></h4><p>下载和使用在 <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a> 和第三方包仓库的依赖包：</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbox &gt;1.6.1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libuv master&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vcpkg::ffmpeg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brew::pcre2/libpcre2-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;conan::openssl/1.1.1g&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {alias </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;openssl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, optional </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, debug </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tbox&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libuv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;vcpkg::ffmpeg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;brew::pcre2/libpcre2-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;openssl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>另外，我们也可以使用 <a href="https://github.com/xmake-io/xrepo" target="_blank" rel="noreferrer">xrepo</a> 命令来快速安装依赖包。</p><h4 id="qt-quickapp-应用程序" tabindex="-1">Qt QuickApp 应用程序 <a class="header-anchor" href="#qt-quickapp-应用程序" aria-label="Permalink to &quot;Qt QuickApp 应用程序&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;qt.quickapp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/qml.qrc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="cuda-程序" tabindex="-1">Cuda 程序 <a class="header-anchor" href="#cuda-程序" aria-label="Permalink to &quot;Cuda 程序&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_cugencodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;native&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_cugencodes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;compute_35&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="wdk-umdf-驱动程序" tabindex="-1">WDK/UMDF 驱动程序 <a class="header-anchor" href="#wdk-umdf-驱动程序" aria-label="Permalink to &quot;WDK/UMDF 驱动程序&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;echo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.driver&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.env.umdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;driver/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;driver/*.inx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_includedirs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exe&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;app&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;wdk.env.umdf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;exe/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>更多WDK驱动程序例子(umdf/kmdf/wdm)，见：<a href="https://xmake.io/#/zh-cn/guide/project_examples?id=wdk%e9%a9%b1%e5%8a%a8%e7%a8%8b%e5%ba%8f" target="_blank" rel="noreferrer">WDK工程例子</a></p><h4 id="ios-macos-应用程序" tabindex="-1">iOS/MacOS 应用程序 <a class="header-anchor" href="#ios-macos-应用程序" aria-label="Permalink to &quot;iOS/MacOS 应用程序&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xcode.application&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/**.storyboard&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.xcassets&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/Info.plist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="framework-和-bundle-程序-ios-macos" tabindex="-1">Framework 和 Bundle 程序（iOS/MacOS） <a class="header-anchor" href="#framework-和-bundle-程序-ios-macos" aria-label="Permalink to &quot;Framework 和 Bundle 程序（iOS/MacOS）&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;xcode.framework&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- 或者 xcode.bundle</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.m&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/Info.plist&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="openmp-程序" tabindex="-1">OpenMP 程序 <a class="header-anchor" href="#openmp-程序" aria-label="Permalink to &quot;OpenMP 程序&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libomp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {optional </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loop&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.cpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_rules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c++.openmp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libomp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="zig-程序" tabindex="-1">Zig 程序 <a class="header-anchor" href="#zig-程序" aria-label="Permalink to &quot;Zig 程序&quot;">​</a></h4><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main.zig&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="自动拉取远程工具链" tabindex="-1">自动拉取远程工具链 <a class="header-anchor" href="#自动拉取远程工具链" aria-label="Permalink to &quot;自动拉取远程工具链&quot;">​</a></h3><h4 id="拉取指定版本的-llvm-工具链" tabindex="-1">拉取指定版本的 llvm 工具链 <a class="header-anchor" href="#拉取指定版本的-llvm-工具链" aria-label="Permalink to &quot;拉取指定版本的 llvm 工具链&quot;">​</a></h4><p>我们使用 llvm-10 中的 clang 来编译项目。</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;llvm 10.x&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {alias </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;llvm-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_toolchains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;llvm@llvm-10&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="拉取交叉编译工具链" tabindex="-1">拉取交叉编译工具链 <a class="header-anchor" href="#拉取交叉编译工具链" aria-label="Permalink to &quot;拉取交叉编译工具链&quot;">​</a></h4><p>我们也可以拉取指定的交叉编译工具链来编译项目。</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_toolchains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h4 id="拉取工具链并且集成对应工具链编译的依赖包" tabindex="-1">拉取工具链并且集成对应工具链编译的依赖包 <a class="header-anchor" href="#拉取工具链并且集成对应工具链编译的依赖包" aria-label="Permalink to &quot;拉取工具链并且集成对应工具链编译的依赖包&quot;">​</a></h4><p>我们也可以使用指定的muslcc交叉编译工具链去编译和集成所有的依赖包。</p><div class="language-lua vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_requires</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {system </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_toolchains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;@muslcc&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">target</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set_kind</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;binary&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_files</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/*.c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    add_packages</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zlib&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;libogg&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><h4 id="生成ide工程文件插件-makefile-vs2002-vs2022" tabindex="-1">生成IDE工程文件插件（makefile, vs2002 - vs2022, ...） <a class="header-anchor" href="#生成ide工程文件插件-makefile-vs2002-vs2022" aria-label="Permalink to &quot;生成IDE工程文件插件（makefile, vs2002 - vs2022, ...）&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vsxmake</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;debug,release&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 新版vs工程生成插件（推荐）</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;debug,release&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ninja</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> project</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compile_commands</span></span></code></pre></div><h4 id="加载自定义lua脚本插件" tabindex="-1">加载自定义lua脚本插件 <a class="header-anchor" href="#加载自定义lua脚本插件" aria-label="Permalink to &quot;加载自定义lua脚本插件&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./test.lua</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;print(&#39;hello xmake!&#39;)&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lib.detect.find_tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gcc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xmake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> l</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> print(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;hello xmake!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">1,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 2,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    1,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    2,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    3</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span></code></pre></div><p>更多内置插件见相关文档：<a href="https://xmake.io/#/zh-cn/plugin/builtin_plugins" target="_blank" rel="noreferrer">内置插件文档</a></p><p>其他扩展插件，请到插件仓库进行下载安装: <a href="https://github.com/xmake-io/xmake-plugins" target="_blank" rel="noreferrer">xmake-plugins</a>.</p><h2 id="ide和编辑器插件" tabindex="-1">IDE和编辑器插件 <a class="header-anchor" href="#ide和编辑器插件" aria-label="Permalink to &quot;IDE和编辑器插件&quot;">​</a></h2><ul><li><a href="https://github.com/xmake-io/xmake-vscode" target="_blank" rel="noreferrer">xmake-vscode</a></li></ul><img src="https://raw.githubusercontent.com/xmake-io/xmake-vscode/master/res/problem.gif" width="650px"><ul><li><a href="https://github.com/xmake-io/xmake-sublime" target="_blank" rel="noreferrer">xmake-sublime</a></li></ul><img src="https://raw.githubusercontent.com/xmake-io/xmake-sublime/master/res/problem.gif" width="650px"><ul><li><a href="https://github.com/xmake-io/xmake-idea" target="_blank" rel="noreferrer">xmake-idea</a></li></ul><img src="https://raw.githubusercontent.com/xmake-io/xmake-idea/master/res/problem.gif" width="650px"><ul><li><a href="https://github.com/Mythos-404/xmake.nvim" target="_blank" rel="noreferrer">xmake.nvim</a> (第三方开发, 感谢<a href="https://github.com/Mythos-404" target="_blank" rel="noreferrer">@Mythos_404</a>)</li></ul><img src="https://raw.githubusercontent.com/Mythos-404/xmake.nvim/main/assets/XmakePreview.gif" width="650px"><ul><li><p><a href="https://github.com/luzhlon/xmake.vim" target="_blank" rel="noreferrer">xmake.vim</a> (third-party, thanks <a href="https://github.com/luzhlon" target="_blank" rel="noreferrer">@luzhlon</a>)</p></li><li><p><a href="https://github.com/HelloWorld886/xmake-visualstudio" target="_blank" rel="noreferrer">xmake-visualstudio</a> (third-party, thanks <a href="https://github.com/HelloWorld886" target="_blank" rel="noreferrer">@HelloWorld886</a>)</p></li><li><p><a href="https://github.com/Arthapz/xmake-project-manager" target="_blank" rel="noreferrer">xmake-qtcreator</a> (third-party, thanks <a href="https://github.com/Arthapz" target="_blank" rel="noreferrer">@Arthapz</a>)</p></li></ul><h3 id="xmake-gradle插件-jni" tabindex="-1">XMake Gradle插件 (JNI) <a class="header-anchor" href="#xmake-gradle插件-jni" aria-label="Permalink to &quot;XMake Gradle插件 (JNI)&quot;">​</a></h3><p>我们也可以在Gradle中使用<a href="https://github.com/xmake-io/xmake-gradle" target="_blank" rel="noreferrer">xmake-gradle</a>插件来集成编译JNI库</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>plugins {</span></span>
<span class="line"><span>  id &#39;org.tboox.gradle-xmake-plugin&#39; version &#39;1.1.5&#39;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>android {</span></span>
<span class="line"><span>    externalNativeBuild {</span></span>
<span class="line"><span>        xmake {</span></span>
<span class="line"><span>            path &quot;jni/xmake.lua&quot;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>当<code>gradle-xmake-plugin</code>插件被应用生效后，<code>xmakeBuild</code>任务会自动注入到现有的<code>assemble</code>任务中去，自动执行jni库编译和集成。</p><div class="language-console vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">console</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$ ./gradlew app:assembleDebug</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeConfigureForArm64</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeBuildForArm64</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; xmake build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 50%]: cache compiling.debug nativelib.cc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 75%]: linking.debug libnativelib.so</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[100%]: build ok!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; install artifacts to /Users/ruki/projects/personal/xmake-gradle/nativelib/libs/arm64-v8a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeConfigureForArmv7</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:xmakeBuildForArmv7</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; xmake build</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 50%]: cache compiling.debug nativelib.cc</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[ 75%]: linking.debug libnativelib.so</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">[100%]: build ok!</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&gt;&gt; install artifacts to /Users/ruki/projects/personal/xmake-gradle/nativelib/libs/armeabi-v7a</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:preBuild</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :nativelib:assemble</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; Task :app:assembleDebug</span></span></code></pre></div><h2 id="ci-集成" tabindex="-1">CI 集成 <a class="header-anchor" href="#ci-集成" aria-label="Permalink to &quot;CI 集成&quot;">​</a></h2><h3 id="github-action" tabindex="-1">GitHub Action <a class="header-anchor" href="#github-action" aria-label="Permalink to &quot;GitHub Action&quot;">​</a></h3><p>我们可以使用 <a href="https://github.com/xmake-io/github-action-setup-xmake" target="_blank" rel="noreferrer">github-action-setup-xmake</a> 在 Github Action 上实现跨平台安装集成 Xmake。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>uses: xmake-io/github-action-setup-xmake@v1</span></span>
<span class="line"><span>with:</span></span>
<span class="line"><span>  xmake-version: latest</span></span></code></pre></div><h2 id="谁在使用-xmake" tabindex="-1">谁在使用 Xmake? <a class="header-anchor" href="#谁在使用-xmake" aria-label="Permalink to &quot;谁在使用 Xmake?&quot;">​</a></h2><p>请点击 <a href="https://xmake.io/#/zh-cn/about/who_is_using_xmake" target="_blank" rel="noreferrer">用户列表</a> 查看完整用户使用列表。</p><p>如果您在使用 xmake，也欢迎通过 PR 将信息提交至上面的列表，让更多的用户了解有多少用户在使用 xmake，也能让用户更加安心使用 xmake。</p><p>我们也会有更多的动力去持续投入，让 xmake 项目和社区更加繁荣。</p><h2 id="联系方式" tabindex="-1">联系方式 <a class="header-anchor" href="#联系方式" aria-label="Permalink to &quot;联系方式&quot;">​</a></h2><ul><li>邮箱：<a href="mailto:waruqi@gmail.com" target="_blank" rel="noreferrer">waruqi@gmail.com</a></li><li>主页：<a href="https://xmake.io/#/zh-cn/" target="_blank" rel="noreferrer">xmake.io</a></li><li>社区 <ul><li><a href="https://www.reddit.com/r/xmake/" target="_blank" rel="noreferrer">Reddit论坛</a></li><li><a href="https://t.me/tbooxorg" target="_blank" rel="noreferrer">Telegram群组</a></li><li><a href="https://discord.gg/xmake" target="_blank" rel="noreferrer">Discord聊天室</a></li><li>QQ群：343118190, 662147501</li></ul></li><li>源码：<a href="https://github.com/xmake-io/xmake" target="_blank" rel="noreferrer">Github</a>, <a href="https://gitee.com/tboox/xmake" target="_blank" rel="noreferrer">Gitee</a></li><li>微信公众号：tboox-os</li></ul><h2 id="感谢" tabindex="-1">感谢 <a class="header-anchor" href="#感谢" aria-label="Permalink to &quot;感谢&quot;">​</a></h2><p>感谢所有对xmake有所<a href="/xmake-docs/CONTRIBUTING.html">贡献</a>的人: <a href="https://github.com/xmake-io/xmake/graphs/contributors"><img src="https://opencollective.com/xmake/contributors.svg?width=890&amp;button=false"></a></p><ul><li><a href="https://github.com/TitanSnow" target="_blank" rel="noreferrer">TitanSnow</a>: 提供xmake <a href="https://github.com/TitanSnow/ts-xmake-logo" target="_blank" rel="noreferrer">logo</a> 和安装脚本。</li><li><a href="https://github.com/uael" target="_blank" rel="noreferrer">uael</a>: 提供语义版本跨平台c库 <a href="https://github.com/uael/sv" target="_blank" rel="noreferrer">sv</a>。</li><li><a href="https://github.com/OpportunityLiu" target="_blank" rel="noreferrer">OpportunityLiu</a>: 改进cuda构建, tests框架和ci。</li><li><a href="https://github.com/xq114" target="_blank" rel="noreferrer">xq144</a>: 改进 <code>xrepo env shell</code>，并贡献大量包到 <a href="https://github.com/xmake-io/xmake-repo" target="_blank" rel="noreferrer">xmake-repo</a> 仓库。</li></ul>`,145)]))}const g=i(n,[["render",h]]);export{o as __pageData,g as default};
